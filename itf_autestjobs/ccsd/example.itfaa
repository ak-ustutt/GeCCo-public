// This ITF algo file was created using the GeCCo ITF translator
// Authors: J.A. Black, A. Koehn

// Created on: 18-05-2021 13:43

---- decl
index-space: ijklmn, Closed  , c
index-space: abcdef, External, e
index-space: CD, Core, C


// K-integral tensors
tensor: K:eecc[baji], K:eecc
tensor: K:eccc[bkji], K:eccc
tensor: K:cccc[klij], K:cccc

// J-integral tensors
tensor: J:eecc[abji], J:eecc
tensor: J:eeec[acbj], J:eeec

// Special integral tensors
tensor: K4E:eecc[abij], K4E:eecc

// Tensor to send to Kext
tensor: INTpp[abjk], INTpp

// Fock tensors
tensor: f:ec[ai], f:ec
tensor: f:cc[ji], f:cc
tensor: f:ee[ab], f:ee

// Amplitude tensors
tensor: T:ec[ai], T:ec
tensor: T:eecc[abij], T:eecc

// Residual tensors
tensor: R:eecc[abij], R:eecc
tensor: R:ec[ai], R:ec

// Energy and DIIS scalars
tensor: ECC[], ECC

tensor: EDi1[], EDi1     // Direct 1st order energy
tensor: Nrm1[], Nrm1     // Singles amplitude norm
tensor: Var1[], Var1     // Singles residual norm
tensor: EMp1[], EMp1     // MP2 energy
tensor: ShiftS[], ShiftS

// Used in amplitdue update
tensor: L1[ai],            !Create{type:plain}

tensor: EDi2[], EDi2     // Direct 1st order energy
tensor: Nrm2[], Nrm2     // Doubles amplitude norm
tensor: Var2[], Var2     // Doubles residual norm
tensor: EMp2[], EMp2     // MP2 energy
tensor: ERef[], ERef     // Reference energy
tensor: ShiftP[], ShiftP

// Tensors needed to calculate the reference energy
tensor: f:CC[CC],   f:CC
tensor: CoreH[ii],  h:cc
tensor: CoreH[CC],  h:CC
tensor: Delta[ii],  Delta
tensor: DeltaC[CC], DeltaC

// Used in amplitude update
tensor: L2[abij],          !Create{type:plain}
tensor: C[abij],           !Create{type:plain}


// Intermediates
tensor: ITIN[abij],        !Create{type:disk}
tensor: X1[baji],          !Create{type:disk}
tensor: X2[abij],          !Create{type:disk}
tensor: X3[bkji],          !Create{type:disk}
tensor: X4[abjk],          !Create{type:disk}
tensor: X5[acbj],          !Create{type:disk}
tensor: STIN100001aa[ji],  !Create{type:disk}
tensor: X6[bcjk],          !Create{type:disk}
tensor: STIN110001aa[ki],  !Create{type:disk}
tensor: STIN120001aaaa[bkji], !Create{type:disk}
tensor: STIN120001abab[bkji], !Create{type:disk}
tensor: STIN120001abba[bkji], !Create{type:disk}
tensor: STIN130001aa[bj],  !Create{type:disk}
tensor: STIN220001aa[lj],  !Create{type:disk}
tensor: STIN230001abab[klij], !Create{type:disk}
tensor: STIN230001abba[klij], !Create{type:disk}
tensor: STIN240001aa[bd],  !Create{type:disk}
tensor: STIN250001aaaa[dali], !Create{type:disk}
tensor: STIN250001abab[dali], !Create{type:disk}
tensor: STIN250001abba[dali], !Create{type:disk}
tensor: STIN260001abab[akji], !Create{type:disk}
tensor: STIN260001abba[akji], !Create{type:disk}
tensor: STIN270001abba[akji], !Create{type:disk}
tensor: STIN280001aa[kj],  !Create{type:disk}
tensor: STIN290001abab[alji], !Create{type:disk}
tensor: STIN290001abba[alji], !Create{type:disk}
tensor: STIN300001abab[klij], !Create{type:disk}
tensor: STIN300001abba[klij], !Create{type:disk}
tensor: STIN310001aa[kj],  !Create{type:disk}
tensor: STIN320001abba[akji], !Create{type:disk}
tensor: STIN330001aaaa[cbkj], !Create{type:disk}
tensor: STIN330001abab[cbkj], !Create{type:disk}
tensor: STIN330001abba[cbkj], !Create{type:disk}
tensor: STIN340001aa[bc],  !Create{type:disk}
tensor: STIN350001abba[klij], !Create{type:disk}
tensor: STIN350002abab[blji], !Create{type:disk}
tensor: STIN360001aaaa[clkj], !Create{type:disk}
tensor: STIN360001abab[clkj], !Create{type:disk}
tensor: STIN360001abba[clkj], !Create{type:disk}
tensor: STIN360002abab[alji], !Create{type:disk}
tensor: STIN360002abba[alji], !Create{type:disk}
tensor: STIN400001aa[bj],  !Create{type:disk}


---- code("Init_Amplitudes")
// Using MP2 amplitudes for starting guess
alloc T:ec[ai], EMp1[], Nrm1[]
load f:ec[ai], f:ee[aa], f:cc[ii]
.T:ec[ai] -= f:ec[ai]
denom-scale T:ec[ai], f:ee[aa] - f:cc[ii]
.EMp1[] += T:ec[ai] f:ec[ai]
.Nrm1[] += 2.0*T:ec[ai] T:ec[ai]
drop f:cc[ii], f:ee[aa], f:ec[ai]
store Nrm1[], EMp1[], T:ec[ai]

alloc EMp2[], Nrm2[]
for [i,j]:
   alloc T:eecc[abij]
   load K:eecc[**ij], f:ee[aa], f:cc[ii], f:cc[jj]
   .T:eecc[abij] -= K:eecc[abij]
   denom-scale T:eecc[abij], f:ee[aa] + f:ee[bb] - f:cc[ii] - f:cc[jj]
   .EMp2[] += (2.0*T:eecc[abij] - T:eecc[baij]) K:eecc[abij]
   .Nrm2[] += (2.0*T:eecc[abij] - T:eecc[baij]) T:eecc[abij]
   drop f:cc[jj], f:cc[ii], f:ee[aa], K:eecc[**ij]
   store T:eecc[**ij]
store Nrm2[], EMp2[]


---- code ("Ref_Energy")
alloc ERef[]
// Closed-shell contribution
load f:cc[ii], CoreH[ii], Delta[ii]
.ERef += f:cc[ij] Delta[ij]
.ERef += CoreH[ij] Delta[ij]
drop Delta, CoreH, f:cc

// Core contribution
load f:CC[CC], CoreH[CC], DeltaC[CC]
.ERef += f:CC[CD] DeltaC[CD]
.ERef += CoreH[CD] DeltaC[CD]
drop DeltaC, CoreH, f:CC
store ERef[]




---- code("Update_INTkx")
load T:eecc[abij]
drop T:eecc[abij]


---- task("Update_INTkx")
init INTpp, ITIN[abij]
save INTpp
.INTpp[abij] += ITIN[abij]
.INTpp[abij] += ITIN[baji]

---- task("Update_INTkx")
.ITIN[abij] += .5*T:ec[ai] T:ec[bj]
.ITIN[abij] += .5*T:eecc[abij]
---- code("Update_INTkx")
load T:eecc[abij]
drop T:eecc[abij]

---- task("Residual")
init R:eecc[abij], R:ec[ai], ECC[], ITIN[abij], X1[baji], X2[abij], X3[bkji], X4[abjk], X5[acbj], STIN100001aa[ji], X6[bcjk], STIN110001aa[ki], STIN120001aaaa[bkji], STIN120001abab[bkji], STIN120001abba[bkji], STIN130001aa[bj], STIN220001aa[lj], STIN230001abab[klij], STIN230001abba[klij], STIN240001aa[bd], STIN250001aaaa[dali], STIN250001abab[dali], STIN250001abba[dali], STIN260001abab[akji], STIN260001abba[akji], STIN270001abba[akji], STIN280001aa[kj], STIN290001abab[alji], STIN290001abba[alji], STIN300001abab[klij], STIN300001abba[klij], STIN310001aa[kj], STIN320001abba[akji], STIN330001aaaa[cbkj], STIN330001abab[cbkj], STIN330001abba[cbkj], STIN340001aa[bc], STIN350001abba[klij], STIN350002abab[blji], STIN360001aaaa[clkj], STIN360001abab[clkj], STIN360001abba[clkj], STIN360002abab[alji], STIN360002abba[alji], STIN400001aa[bj]
save R:eecc[abij], R:ec[ai], ECC[]
.R:ec[ai] += f:ec[ai]
.R:ec[ai] -= f:cc[ji] T:ec[aj]
.R:ec[ai] += f:ee[ab] T:ec[bi]
.X1[baji] += K:eecc[baji]
.X1[baji] -= J:eecc[abji]
.R:ec[ai] += X1[baji] T:ec[bj]
.R:ec[ai] += K:eecc[abij] T:ec[bj]
.X2[abij] += T:eecc[abij]
.X2[abij] -= T:eecc[baij]
.R:ec[ai] += f:ec[bj] X2[abij]
.R:ec[ai] += f:ec[bj] T:eecc[abij]
.X3[bkji] += K:eccc[bkji]
.X3[bkji] -= K:eccc[bjki]
.X4[abjk] += INTpp[abjk]
.X4[abjk] -= INTpp[bajk]
.R:ec[ai] += .5*X3[bkji] X4[abjk]
.R:ec[ai] -= .5*K:eccc[bjki] INTpp[abjk]
.R:ec[ai] -= .5*K:eccc[bkji] INTpp[abkj]
.X5[acbj] += J:eeec[acbj]
.X5[acbj] -= J:eeec[abcj]
.R:ec[ai] -= .5*X5[acbj] X4[bcij]
.R:ec[ai] += .5*J:eeec[abcj] INTpp[bcij]
.R:ec[ai] += .5*J:eeec[acbj] INTpp[cbij]
.STIN100001aa[ji] += f:ec[bj] T:ec[bi]
.R:ec[ai] -= STIN100001aa[ji] T:ec[aj]
.X6[bcjk] += K:eecc[bcjk]
.X6[bcjk] -= K:eecc[bckj]
.STIN110001aa[ki] += X6[bcjk] X4[bcij]
.STIN110001aa[ki] -= K:eecc[bckj] INTpp[bcij]
.STIN110001aa[ki] -= K:eecc[cbkj] INTpp[cbij]
.R:ec[ai] += .5*STIN110001aa[ki] T:ec[ak]
.STIN120001aaaa[bkji] += X6[bcjk] T:ec[ci]
.STIN120001abab[bkji] += K:eecc[bcjk] T:ec[ci]
.STIN120001abba[bkji] -= K:eecc[cbjk] T:ec[ci]
.R:ec[ai] += .5*STIN120001aaaa[bkji] X2[abjk]
.R:ec[ai] += .5*STIN120001abba[bkji] T:eecc[abjk]
.R:ec[ai] -= .5*STIN120001abab[bkji] T:eecc[abkj]
.STIN130001aa[bj] += X6[bcjk] T:ec[ck]
.STIN130001aa[bj] += K:eecc[bcjk] T:ec[ck]
.R:ec[ai] += STIN130001aa[bj] X2[abij]
.R:ec[ai] += STIN130001aa[bj] T:eecc[abij]
.ITIN[abij] += .5*K:eecc[abij]
.ITIN[abij] -= K:eccc[akij] T:ec[bk]
.ITIN[abij] += J:eeec[bcai] T:ec[cj]
.ITIN[abij] -= f:cc[kj] T:eecc[abik]
.ITIN[abij] += f:ee[bc] T:eecc[acij]
.ITIN[abij] += .25*K:cccc[klij] INTpp[abkl]
.ITIN[abij] += .25*K:cccc[lkij] INTpp[ablk]
.ITIN[abij] += K:eecc[cbkj] X2[acik]
.ITIN[abij] += X1[cbkj] T:eecc[acik]
.ITIN[abij] -= J:eecc[bcki] T:eecc[ackj]
.ITIN[abij] += .5*K4E:eecc[abij]
.STIN220001aa[lj] += X6[cdkl] X4[cdjk]
.STIN220001aa[lj] -= K:eecc[cdlk] INTpp[cdjk]
.STIN220001aa[lj] -= K:eecc[dclk] INTpp[dcjk]
.ITIN[abij] += .5*STIN220001aa[lj] T:eecc[abil]
.STIN230001abab[klij] += K:eecc[cdkl] INTpp[cdij]
.STIN230001abab[klij] += K:eecc[dckl] INTpp[dcij]
.STIN230001abba[klij] -= K:eecc[cdkl] INTpp[cdji]
.STIN230001abba[klij] -= K:eecc[dckl] INTpp[dcji]
.ITIN[abij] += .125*STIN230001abab[klij] T:eecc[abkl]
.ITIN[abij] -= .125*STIN230001abba[klij] T:eecc[ablk]
.STIN240001aa[bd] += X6[cdkl] X4[bckl]
.STIN240001aa[bd] -= K:eecc[dckl] INTpp[bckl]
.STIN240001aa[bd] -= K:eecc[dclk] INTpp[bclk]
.ITIN[abij] += .5*STIN240001aa[bd] T:eecc[adij]
.STIN250001aaaa[dali] += X6[cdkl] X2[acik]
.STIN250001aaaa[dali] += K:eecc[dclk] T:eecc[acik]
.STIN250001abab[dali] += X6[cdkl] T:eecc[caki]
.STIN250001abab[dali] += K:eecc[dclk] X2[acik]
.STIN250001abba[dali] += K:eecc[cdlk] T:eecc[caik]
.ITIN[abij] += .5*STIN250001aaaa[dali] T:eecc[dblj]
.ITIN[abij] += .5*STIN250001abab[dali] X2[bdjl]
.ITIN[abij] += .5*STIN250001abba[dalj] T:eecc[dbil]
.STIN260001abab[akji] -= J:eecc[acki] T:ec[cj]
.STIN260001abba[akji] += K:eecc[caki] T:ec[cj]
.ITIN[abij] -= STIN260001abba[akji] T:ec[bk]
.ITIN[abij] += STIN260001abab[akij] T:ec[bk]
.STIN270001abba[akji] += f:ec[ck] T:eecc[caji]
.ITIN[abij] -= STIN270001abba[akji] T:ec[bk]
.STIN280001aa[kj] += f:ec[ck] T:ec[cj]
.ITIN[abij] -= STIN280001aa[kj] T:eecc[abik]
.STIN290001abab[alji] += K:eccc[cklj] T:eecc[caik]
.STIN290001abba[alji] += X3[clkj] T:eecc[caki]
.STIN290001abba[alji] += K:eccc[clkj] X2[acik]
.ITIN[abij] -= STIN290001abba[alji] T:ec[bl]
.ITIN[abij] += STIN290001abab[alij] T:ec[bl]
.STIN300001abab[klij] -= K:eccc[ckli] T:ec[cj]
.STIN300001abba[klij] += K:eccc[clki] T:ec[cj]
.ITIN[abij] -= .5*STIN300001abab[klij] INTpp[abkl]
.ITIN[abij] += .5*STIN300001abba[klij] INTpp[ablk]
.STIN310001aa[kj] += X3[clkj] T:ec[cl]
.STIN310001aa[kj] -= K:eccc[cklj] T:ec[cl]
.ITIN[abij] += STIN310001aa[kj] T:eecc[abik]
.STIN320001abba[akji] -= J:eeec[adck] INTpp[cdji]
.STIN320001abba[akji] -= J:eeec[acdk] INTpp[dcji]
.ITIN[abij] += .5*STIN320001abba[akji] T:ec[bk]
.STIN330001aaaa[cbkj] += X5[bdck] T:ec[dj]
.STIN330001abab[cbkj] += J:eeec[bdck] T:ec[dj]
.STIN330001abba[cbkj] -= J:eeec[bcdk] T:ec[dj]
.ITIN[abij] += STIN330001abab[cbkj] X2[acik]
.ITIN[abij] += STIN330001aaaa[cbkj] T:eecc[acik]
.ITIN[abij] += STIN330001abba[cbki] T:eecc[ackj]
.STIN340001aa[bc] += X5[bdck] T:ec[dk]
.STIN340001aa[bc] -= J:eeec[bcdk] T:ec[dk]
.ITIN[abij] -= STIN340001aa[bc] T:eecc[acij]
.STIN350001abba[klij] -= K:eecc[cdkl] INTpp[cdji]
.STIN350001abba[klij] -= K:eecc[dckl] INTpp[dcji]
.STIN350002abab[blji] += STIN350001abba[klij] T:ec[bk]
.ITIN[abij] -= .25*STIN350002abab[blji] T:ec[al]
.STIN360001aaaa[clkj] += X6[cdkl] T:ec[dj]
.STIN360001abab[clkj] += K:eecc[cdkl] T:ec[dj]
.STIN360001abba[clkj] -= K:eecc[dckl] T:ec[dj]
.STIN360002abab[alji] -= STIN360001abba[clkj] T:eecc[caik]
.STIN360002abba[alji] += STIN360001aaaa[clkj] T:eecc[caki]
.STIN360002abba[alji] += STIN360001abab[clkj] X2[acik]
.ITIN[abij] -= STIN360002abba[alji] T:ec[bl]
.ITIN[abij] += STIN360002abab[alij] T:ec[bl]
.ECC[] += .5*X6[abij] X2[abij]
.ECC[] += .5*K:eecc[abij] T:eecc[abij]
.ECC[] += .5*K:eecc[baij] T:eecc[baij]
.ECC[] += 2.*f:ec[ai] T:ec[ai]
.STIN400001aa[bj] += X6[abij] T:ec[ai]
.STIN400001aa[bj] += K:eecc[baji] T:ec[ai]
.ECC[] += STIN400001aa[bj] T:ec[bj]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
---- code("Residual")
load T:eecc[abij]
drop T:eecc[abij]

---- code("Update_Amplitudes")
// Update singles
load R:ec[ai]
load f:ee[aa], f:cc[ii], ShiftS[]
denom-scale R:ec[ai], f:ee[aa] - f:cc[ii] + ShiftS[]
drop ShiftS[], f:cc[ii], f:ee[aa]

alloc EDi1[], Nrm1[], Var1[]
load T:ec[ai], f:ec[ai]
.T:ec[ai] -= R:ec[ai]
.EDi1[] += 2.0*T:ec[ai] f:ec[ai]
.Nrm1[] += 2.0*T:ec[ai] T:ec[ai]
.Var1[] += 2.0*R:ec[ai] R:ec[ai]
drop f:ec[ai]
store T:ec[ai]
store Var1[], Nrm1[], EDi1[]
drop R:ec[ai]

// Update doubles
load T:ec[ai]
alloc EDi2[], Nrm2[], Var2[]
load R:eecc[abij], K:eecc[abij]
load T:eecc[abij]
load f:ee[aa], f:cc[ii], ShiftP[]
denom-scale R:eecc[abij], f:ee[aa] + f:ee[bb] - f:cc[ii] - f:cc[jj] + ShiftP[]
drop ShiftP[], f:cc[ii], f:ee[aa]

.T:eecc[abij] -= R:eecc[abij]

alloc C[abij]
.C[abij] += T:eecc[abij]
.C[abij] += T:ec[ai] T:ec[bj]
.EDi2 += (2.0*C[abij] - C[baij]) K:eecc[abij]
.Nrm2 += (2.0*C[abij] - C[baij]) C[abij]
drop C[abij]

.Var2 += (2.0*R:eecc[abij] - R:eecc[baij]) R:eecc[abij]

store T:eecc[abij]
drop K:eecc[abij], R:eecc[abij]
store Var2[], Nrm2[], EDi2[]
drop T:ec[ai]

---- end
