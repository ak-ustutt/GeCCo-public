// This ITF algo file was created using the GeCCo ITF translator
// Author: J.A. Black

// Created on: 29-10-2019 13:27

---- decl
index-space: ijklmn, Closed  , c
index-space: abcdef, External, e
index-space: CD, Core, C


// K-integral tensors
tensor: K:cccc[klij], K:cccc
tensor: K:eccc[bkji], K:eccc
tensor: K:eecc[baji], K:eecc
tensor: K:eeec[acbj], K:eeec

// J-integral tensors
tensor: J:eccc[bilj], J:eccc
tensor: J:eecc[baij], J:eecc

// Special integral tensors
tensor: K4E1:eecc[abij], K4E1:eecc

// Tensor to send to Kext
tensor: INTpp[abkj], INTpp

// Fock tensors
tensor: f:cc[ji], f:cc
tensor: f:ec[ai], f:ec
tensor: f:ee[ab], f:ee

// Amplitude tensors
tensor: T:ec[ai], T:ec
tensor: T:eecc[abij], T:eecc

// Residual tensors
tensor: R:ec[ai], R:ec
tensor: R:eecc[abij], R:eecc

// Energy and DIIS scalars
tensor: ECC[], ECC
tensor: ERef[], ERef     // Reference energy
tensor: EMp1[], EMp1     // MP2 energy
tensor: EDi1[], EDi1     // Direct 1st order energy
tensor: Nrm1[], Nrm1     // Singles amplitude norm
tensor: Var1[], Var1     // Singles residual norm
tensor: EMp2[], EMp2     // MP2 energy
tensor: EDi2[], EDi2     // Direct 1st order energy
tensor: Nrm2[], Nrm2     // Doubles amplitude norm
tensor: Var2[], Var2     // Doubles residual norm

// Tensors needed to calculate the reference energy
tensor: f:CC[CC],   f:CC
tensor: CoreH[ii],  h:cc
tensor: CoreH[CC],  h:CC
tensor: Delta[ii],  Delta
tensor: DeltaC[CC], DeltaC

tensor: ShiftS[], ShiftS
tensor: ShiftP[], ShiftP

// Intermediates
tensor: STIN0001aa[ij],    !Create{type:plain}
tensor: STIN0001aaaa[ijak], !Create{type:plain}
tensor: STIN0001abba[ijak], !Create{type:plain}
tensor: STIN0001baba[ijak], !Create{type:plain}
tensor: STIN0001aa[ai],    !Create{type:plain}
tensor: STIN0001bb[ai],    !Create{type:plain}
tensor: STIN0001bb[ij],    !Create{type:plain}
tensor: STIN0001abab[ijkl], !Create{type:plain}
tensor: STIN0001baab[ijkl], !Create{type:plain}
tensor: STIN0001aa[ba],    !Create{type:plain}
tensor: STIN0001aaaa[ibaj], !Create{type:plain}
tensor: STIN0001baba[ibaj], !Create{type:plain}
tensor: STIN0001abab[biaj], !Create{type:plain}
tensor: STIN0001abab[aikj], !Create{type:plain}
tensor: STIN0001baba[iakj], !Create{type:plain}
tensor: STIN0001baba[ijkl], !Create{type:plain}
tensor: STIN0002abab[aikj], !Create{type:plain}
tensor: STIN0001abab[ijak], !Create{type:plain}
tensor: STIN0001bbbb[ijak], !Create{type:plain}
tensor: STIN0002baba[iakj], !Create{type:plain}
tensor: G:eecc[abij], !Create{type:disk}

tensor: L1[ai],            !Create{type:plain}
tensor: L2[abij],          !Create{type:plain}
tensor: C[abij],           !Create{type:plain}


---- code("Init_Amplitudes")
// Using MP2 amplitudes for starting guess
alloc T:ec[ai], EMp1[], Nrm1[]
load f:ec[ai], f:ee[aa], f:cc[ii]
.T:ec[ai] -= f:ec[ai]
denom-scale T:ec[ai], f:ee[aa] - f:cc[ii]
.EMp1[] += T:ec[ai] f:ec[ai]
.Nrm1[] += 2.0*T:ec[ai] T:ec[ai]
drop f:cc[ii], f:ee[aa], f:ec[ai]
store Nrm1[], EMp1[], T:ec[ai]

alloc EMp2[], Nrm2[]
for [i,j]:
   alloc T:eecc[abij]
   load K:eecc[**ij], f:ee[aa], f:cc[ii], f:cc[jj]
   .T:eecc[abij] -= K:eecc[abij]
   denom-scale T:eecc[abij], f:ee[aa] + f:ee[bb] - f:cc[ii] - f:cc[jj]
   .EMp2[] += (2.0*T:eecc[abij] - T:eecc[baij]) K:eecc[abij]
   .Nrm2[] += (2.0*T:eecc[abij] - T:eecc[baij]) T:eecc[abij]
   drop f:cc[jj], f:cc[ii], f:ee[aa], K:eecc[**ij]
   store T:eecc[**ij]
store Nrm2[], EMp2[]


---- code ("Ref_Energy")
alloc ERef[]
// Closed-shell contribution
load f:cc[ii], CoreH[ii], Delta[ii]
.ERef += f:cc[ij] Delta[ij]
.ERef += CoreH[ij] Delta[ij]
drop Delta, CoreH, f:cc

// Core contribution
load f:CC[CC], CoreH[CC], DeltaC[CC]
.ERef += f:CC[CD] DeltaC[CD]
.ERef += CoreH[CD] DeltaC[CD]
drop DeltaC, CoreH, f:CC
store ERef[]


---- code("Update_Kext_Tensor")
alloc INTpp[abij]
load T:ec[ai]
.INTpp[abij] += T:ec[ai] T:ec[bj]
drop T:ec[ai]
load T:eecc[abij]
.INTpp[abij] += T:eecc[abij]
drop T:eecc[abij]
store INTpp[abij]


---- code("Residual")
alloc R:ec[ai]
load f:ec[ai]
.R:ec[ai] += f:ec[ai]
drop f:ec[ai]
load f:cc[ji], T:ec[aj]
.R:ec[ai] -= f:cc[ji] T:ec[aj]
drop T:ec[aj], f:cc[ji]
load f:ee[ab], T:ec[bi]
.R:ec[ai] += f:ee[ab] T:ec[bi]
drop T:ec[bi], f:ee[ab]
load K:eecc[baji], J:eecc[baij], T:ec[bj]
.R:ec[ai] += (K:eecc[baji] - J:eecc[baij]) T:ec[bj]
drop T:ec[bj], J:eecc[baij], K:eecc[baji]
load K:eecc[baji], T:ec[bj]
.R:ec[ai] += K:eecc[baji] T:ec[bj]
drop T:ec[bj], K:eecc[baji]
load f:ec[bj], T:eecc[abij]
.R:ec[ai] += f:ec[bj] (T:eecc[abij] - T:eecc[baij])
.R:ec[ai] += f:ec[bj] T:eecc[abij]
drop T:eecc[abij], f:ec[bj]
load K:eccc[bkji], INTpp[abkj]
.R:ec[ai] -= .5*(K:eccc[bkji] - K:eccc[bjki]) (INTpp[abkj] - INTpp[bakj])
.R:ec[ai] -= K:eccc[bkji] INTpp[abkj]
drop INTpp[abkj], K:eccc[bkji]
for [j]:
    load K:eeec[acbj], INTpp[bcji]
    .R:ec[ai] += .5*(K:eeec[acbj] - K:eeec[abcj]) (INTpp[bcji] - INTpp[cbji])
    .R:ec[ai] += K:eeec[acbj] INTpp[bcji]
    drop INTpp[bcji], K:eeec[acbj]
alloc STIN0001aa[ij]
load f:ec[ai], T:ec[aj]
.STIN0001aa[ij] += f:ec[ai] T:ec[aj]
drop T:ec[aj], f:ec[ai]
load T:ec[aj]
.R:ec[ai] -= STIN0001aa[ji] T:ec[aj]
drop T:ec[aj]
drop STIN0001aa[ij]
alloc STIN0001aa[ij]
load K:eecc[abki], INTpp[abkj]
.STIN0001aa[ij] += .5*(K:eecc[abki] - K:eecc[abik]) (INTpp[abkj] - INTpp[bakj])
.STIN0001aa[ij] += K:eecc[abki] INTpp[abkj]
drop INTpp[abkj], K:eecc[abki]
load T:ec[aj]
.R:ec[ai] -= STIN0001aa[ji] T:ec[aj]
drop T:ec[aj]
drop STIN0001aa[ij]
alloc STIN0001aaaa[ijak], STIN0001abba[ijak], STIN0001baba[ijak]
load K:eecc[abij], T:ec[bk]
.STIN0001aaaa[ijak] += (K:eecc[abij] - K:eecc[abji]) T:ec[bk]
.STIN0001abba[ijak] += K:eecc[abij] T:ec[bk]
.STIN0001baba[ijak] += K:eecc[abij] T:ec[bk]
drop T:ec[bk], K:eecc[abij]
load T:eecc[abkj]
.R:ec[ai] -= .5*STIN0001aaaa[jkbi] (T:eecc[abkj] - T:eecc[bakj])
.R:ec[ai] -= .5*STIN0001abba[jkbi] T:eecc[abkj]
.R:ec[ai] -= .5*STIN0001baba[jkbi] T:eecc[abkj]
drop T:eecc[abkj]
drop STIN0001baba[ijak], STIN0001abba[ijak], STIN0001aaaa[ijak]
alloc STIN0001aa[ai], STIN0001bb[ai]
load K:eecc[abij], T:ec[bj]
.STIN0001aa[ai] += (K:eecc[abij] - K:eecc[abji]) T:ec[bj]
.STIN0001aa[ai] += K:eecc[abij] T:ec[bj]
.STIN0001bb[ai] += K:eecc[abij] T:ec[bj]
.STIN0001bb[ai] += (K:eecc[abij] - K:eecc[abji]) T:ec[bj]
drop T:ec[bj], K:eecc[abij]
load T:eecc[abij]
.R:ec[ai] += STIN0001aa[bj] (T:eecc[abij] - T:eecc[baij])
.R:ec[ai] += STIN0001bb[bj] T:eecc[abij]
drop T:eecc[abij]
drop STIN0001bb[ai], STIN0001aa[ai]
store R:ec[ai]

alloc G:eecc[abij]
load K:eecc[abij]
.G:eecc[abij] += .5*K:eecc[abij]
drop K:eecc[abij]
load K:eccc[akij], T:ec[bk]
.G:eecc[abij] -= K:eccc[akij] T:ec[bk]
drop T:ec[bk], K:eccc[akij]
for [i]:
    load K:eeec[bcai], T:ec[cj]
    .G:eecc[abij] += K:eeec[bcai] T:ec[cj]
    drop T:ec[cj], K:eeec[bcai]
load f:cc[ki], T:eecc[abjk]
.G:eecc[abji] -= f:cc[ki] T:eecc[abjk]
drop T:eecc[abjk], f:cc[ki]
load f:ee[ac], T:eecc[bcij]
.G:eecc[abji] += f:ee[ac] T:eecc[bcij]
drop T:eecc[bcij], f:ee[ac]
load K:cccc[klij], INTpp[abkl]
.G:eecc[abij] += 0.5*K:cccc[klij] INTpp[abkl]
drop INTpp[abkl], K:cccc[klij]
load K:eecc[caki], J:eecc[caik], T:eecc[bcjk]
.G:eecc[abij] += (K:eecc[caki] - J:eecc[caik]) T:eecc[bcjk]
drop T:eecc[bcjk], J:eecc[caik], K:eecc[caki]
load K:eecc[caki], T:eecc[bcjk]
.G:eecc[abij] += K:eecc[caki] (T:eecc[bcjk] - T:eecc[cbjk])
drop T:eecc[bcjk], K:eecc[caki]
load J:eecc[ackj], T:eecc[cbik]
.G:eecc[abij] -= J:eecc[ackj] T:eecc[cbik]
drop T:eecc[cbik], J:eecc[ackj]
// Replacing line with 4-external integrals
//  .G:eecc[abij] += 0.5*K:eeee[abcd] INTpp[cdij]
load K4E1:eecc[abij]
.G:eecc[abij] += 0.5*K4E1:eecc[abij]
drop K4E1:eecc[abij]
alloc STIN0001bb[ij]
load K:eecc[abki], INTpp[abkj]
.STIN0001bb[ij] += K:eecc[abki] INTpp[abkj]
.STIN0001bb[ij] += .5*(K:eecc[abki] - K:eecc[abik]) (INTpp[abkj] - INTpp[bakj])
drop INTpp[abkj], K:eecc[abki]
load T:eecc[abjk]
.G:eecc[abji] -= STIN0001bb[ki] T:eecc[abjk]
drop T:eecc[abjk]
drop STIN0001bb[ij]
alloc STIN0001abab[ijkl], STIN0001baab[ijkl]
load K:eecc[abij], INTpp[abkl]
.STIN0001abab[ijkl] += K:eecc[abij] INTpp[abkl]
.STIN0001baab[ijkl] += K:eecc[abij] INTpp[abkl]
drop INTpp[abkl], K:eecc[abij]
load T:eecc[abkl]
.G:eecc[abij] += .25*STIN0001abab[klij] T:eecc[abkl]
.G:eecc[abij] += .25*STIN0001baab[klij] T:eecc[abkl]
drop T:eecc[abkl]
drop STIN0001baab[ijkl], STIN0001abab[ijkl]
alloc STIN0001aa[ba]
load K:eecc[acji], INTpp[bcji]
.STIN0001aa[ba] -= .5*(K:eecc[acji] - K:eecc[acij]) (INTpp[bcji] - INTpp[cbji])
.STIN0001aa[ba] -= K:eecc[acji] INTpp[bcji]
drop INTpp[bcji], K:eecc[acji]
load T:eecc[bcij]
.G:eecc[abji] += STIN0001aa[ac] T:eecc[bcij]
drop T:eecc[bcij]
drop STIN0001aa[ba]
alloc STIN0001aaaa[ibaj], STIN0001baba[ibaj], STIN0001abab[biaj]
load K:eecc[acik], T:eecc[bcjk]
.STIN0001aaaa[ibaj] += (K:eecc[acik] - K:eecc[acki]) (T:eecc[bcjk] - T:eecc[cbjk])
.STIN0001aaaa[ibaj] += K:eecc[acik] T:eecc[bcjk]
.STIN0001baba[ibaj] += K:eecc[acik] (T:eecc[bcjk] - T:eecc[cbjk])
.STIN0001baba[ibaj] += (K:eecc[acik] - K:eecc[acki]) T:eecc[bcjk]
.STIN0001abab[biaj] -= K:eecc[acki] T:eecc[cbjk]
drop T:eecc[cbjk], K:eecc[acki]
load T:eecc[bcjk]
.G:eecc[abij] += .5*STIN0001aaaa[kaci] T:eecc[bcjk]
.G:eecc[abij] += .5*STIN0001baba[kaci] (T:eecc[bcjk] - T:eecc[cbjk])
.G:eecc[abij] -= .5*STIN0001abab[akcj] T:eecc[cbik]
drop T:eecc[cbik]
drop STIN0001abab[biaj], STIN0001baba[ibaj], STIN0001aaaa[ibaj]
alloc STIN0001abab[aikj], STIN0001baba[iakj]
load J:eecc[abij], T:ec[bk]
.STIN0001abab[aikj] += J:eecc[abij] T:ec[bk]
drop T:ec[bk], J:eecc[abij]
load K:eecc[baij], T:ec[bk]
.STIN0001baba[iakj] += K:eecc[baij] T:ec[bk]
drop T:ec[bk], K:eecc[baij]
load T:ec[bk]
.G:eecc[abij] -= STIN0001abab[akij] T:ec[bk]
.G:eecc[abij] -= STIN0001baba[kaji] T:ec[bk]
drop T:ec[bk]
drop STIN0001baba[iakj], STIN0001abab[aikj]
alloc STIN0001abab[aijk]
load f:ec[bi], T:eecc[abjk]
.STIN0001abab[aijk] += f:ec[bi] T:eecc[abjk]
drop T:eecc[abjk], f:ec[bi]
load T:ec[bk]
.G:eecc[abij] -= STIN0001abab[akij] T:ec[bk]
drop T:ec[bk]
drop STIN0001abab[aijk]
alloc STIN0001bb[ij]
load f:ec[ai], T:ec[aj]
.STIN0001bb[ij] += f:ec[ai] T:ec[aj]
drop T:ec[aj], f:ec[ai]
load T:eecc[abjk]
.G:eecc[abji] -= STIN0001bb[ki] T:eecc[abjk]
drop T:eecc[abjk]
drop STIN0001bb[ij]
alloc STIN0001abab[aikj], STIN0001baba[iakj]
load K:eccc[bilj], T:eecc[abkl]
.STIN0001abab[aikj] += K:eccc[bilj] (T:eecc[abkl] - T:eecc[bakl])
.STIN0001abab[aikj] += (K:eccc[bilj] - K:eccc[blij]) T:eecc[abkl]
drop T:eecc[abkl], K:eccc[bilj]
load J:eccc[bilj], T:eecc[bakl]
.STIN0001baba[iakj] -= J:eccc[bilj] T:eecc[bakl]
drop T:eecc[bakl], J:eccc[bilj]
load T:ec[bk]
.G:eecc[abij] -= STIN0001abab[akij] T:ec[bk]
.G:eecc[abij] -= STIN0001baba[kaji] T:ec[bk]
drop T:ec[bk]
drop STIN0001baba[iakj], STIN0001abab[aikj]
alloc STIN0001abab[jilk], STIN0001baab[jilk]
load K:eccc[aijk], T:ec[al]
.STIN0001abab[jilk] += K:eccc[aijk] T:ec[al]
.STIN0001baab[jilk] += K:eccc[aijk] T:ec[al]
drop T:ec[al], K:eccc[aijk]
load INTpp[abkl]
.G:eecc[abij] += .5*STIN0001abab[klij] INTpp[abkl]
.G:eecc[abij] += .5*STIN0001baab[klij] INTpp[abkl]
drop INTpp[abkl]
drop STIN0001baab[jilk], STIN0001abab[jilk]
alloc STIN0001bb[ij]
load K:eccc[aikj], T:ec[ak]
.STIN0001bb[ij] += K:eccc[aikj] T:ec[ak]
.STIN0001bb[ij] += (K:eccc[aikj] - K:eccc[akij]) T:ec[ak]
drop T:ec[ak], K:eccc[aikj]
load T:eecc[abjk]
.G:eecc[abji] -= STIN0001bb[ki] T:eecc[abjk]
drop T:eecc[abjk]
drop STIN0001bb[ij]
alloc STIN0001abab[aikj]
for [i]:
    load K:eeec[acbi], INTpp[bcjk]
    .STIN0001abab[aikj] += K:eeec[acbi] INTpp[bcjk]
    drop INTpp[bcjk], K:eeec[acbi]
load T:ec[bk]
.G:eecc[abij] -= STIN0001abab[akij] T:ec[bk]
drop T:ec[bk]
drop STIN0001abab[aikj]
alloc STIN0001aaaa[iabj], STIN0001baba[iabj], STIN0001abab[aibj]
for [i]:
    load K:eeec[acbi], T:ec[cj]
    .STIN0001aaaa[iabj] += (K:eeec[acbi] - K:eeec[abci]) T:ec[cj]
    .STIN0001baba[iabj] += K:eeec[acbi] T:ec[cj]
    .STIN0001abab[aibj] += K:eeec[abci] T:ec[cj]
    drop T:ec[cj], K:eeec[abci]
load T:eecc[bcjk]
.G:eecc[abij] += STIN0001aaaa[kaci] T:eecc[bcjk]
.G:eecc[abij] += STIN0001baba[kaci] (T:eecc[bcjk] - T:eecc[cbjk])
.G:eecc[abij] -= STIN0001abab[akcj] T:eecc[cbik]
drop T:eecc[cbik]
drop STIN0001abab[aibj], STIN0001baba[iabj], STIN0001aaaa[iabj]
alloc STIN0001aa[ab]
for [i]:
    load K:eeec[abci], T:ec[ci]
    .STIN0001aa[ab] += (K:eeec[abci] - K:eeec[acbi]) T:ec[ci]
    .STIN0001aa[ab] += K:eeec[abci] T:ec[ci]
    drop T:ec[ci], K:eeec[abci]
load T:eecc[bcij]
.G:eecc[abji] += STIN0001aa[ac] T:eecc[bcij]
drop T:eecc[bcij]
drop STIN0001aa[ab]
alloc STIN0001baba[ijkl], STIN0002abab[aikj]
load K:eecc[abij], INTpp[abkl]
.STIN0001baba[ijkl] += K:eecc[abij] INTpp[abkl]
drop INTpp[abkl], K:eecc[abij]
load T:ec[al]
.STIN0002abab[aikj] -= STIN0001baba[iljk] T:ec[al]
.G:eecc[abij] -= .5*STIN0002abab[akij] T:ec[bk]
drop T:ec[bk]
drop STIN0002abab[aikj], STIN0001baba[ijkl]
alloc STIN0001abab[ijak], STIN0001bbbb[ijak], STIN0001baba[jiak], STIN0002abab[aikj], STIN0002baba[iakj]
load K:eecc[abij], T:ec[bk]
.STIN0001abab[ijak] += K:eecc[abij] T:ec[bk]
.STIN0001bbbb[ijak] += (K:eecc[abij] - K:eecc[abji]) T:ec[bk]
.STIN0001baba[jiak] += K:eecc[abji] T:ec[bk]
drop T:ec[bk], K:eecc[abji]
load T:eecc[abkl]
.STIN0002abab[aikj] += STIN0001abab[libj] (T:eecc[abkl] - T:eecc[bakl])
.STIN0002abab[aikj] += STIN0001bbbb[libj] T:eecc[abkl]
.STIN0002baba[iakj] -= STIN0001baba[ilbj] T:eecc[bakl]
drop T:eecc[bakl]
load T:ec[bk]
.G:eecc[abij] -= STIN0002abab[akij] T:ec[bk]
.G:eecc[abij] -= STIN0002baba[kaji] T:ec[bk]
drop T:ec[bk]
drop STIN0002baba[iakj], STIN0002abab[aikj], STIN0001baba[jiak], STIN0001bbbb[ijak], STIN0001abab[ijak]
store G:eecc[abij]

alloc ECC[]
load K:eecc[abij], T:eecc[abij]
.ECC[] += .5*(K:eecc[abij] - K:eecc[abji]) (T:eecc[abij] - T:eecc[baij])
.ECC[] += K:eecc[abij] T:eecc[abij]
drop T:eecc[abij], K:eecc[abij]
load f:ec[ai], T:ec[ai]
.ECC[] += 2.*f:ec[ai] T:ec[ai]
drop T:ec[ai], f:ec[ai]
alloc STIN0001aa[ai]
load K:eecc[abij], T:ec[bj]
.STIN0001aa[ai] += (K:eecc[abij] - K:eecc[abji]) T:ec[bj]
.STIN0001aa[ai] += K:eecc[abij] T:ec[bj]
drop T:ec[bj], K:eecc[abij]
load T:ec[ai]
.ECC[] += STIN0001aa[ai] T:ec[ai]
drop T:ec[ai]
drop STIN0001aa[ai]
store ECC[]

alloc R:eecc[abij]
load G:eecc[abij]
.R:eecc[abij] += G:eecc[abij]
.R:eecc[abij] += G:eecc[baji]
drop G:eecc[abij]
store R:eecc[abij]


---- code("Update_Amplitudes")
// Update singles
load R:ec[ai]
load f:ee[aa], f:cc[ii], ShiftS[]
denom-scale R:ec[ai], f:ee[aa] - f:cc[ii] + ShiftS[]
drop ShiftS[], f:cc[ii], f:ee[aa]

alloc EDi1[], Nrm1[], Var1[]
load T:ec[ai], f:ec[ai]
.T:ec[ai] -= R:ec[ai]
.EDi1[] += 2.0*T:ec[ai] f:ec[ai]
.Nrm1[] += 2.0*T:ec[ai] T:ec[ai]
.Var1[] += 2.0*R:ec[ai] R:ec[ai]
drop f:ec[ai]
store T:ec[ai]
store Var1[], Nrm1[], EDi1[]
drop R:ec[ai]

// Update doubles
load T:ec[ai]
alloc EDi2[], Nrm2[], Var2[]
load R:eecc[abij], K:eecc[abij]
load T:eecc[abij]
load f:ee[aa], f:cc[ii], ShiftP[]
denom-scale R:eecc[abij], f:ee[aa] + f:ee[bb] - f:cc[ii] - f:cc[jj] + ShiftP[]
drop ShiftP[], f:cc[ii], f:ee[aa]

.T:eecc[abij] -= R:eecc[abij]

alloc C[abij]
.C[abij] += T:eecc[abij]
.C[abij] += T:ec[ai] T:ec[bj]
.EDi2 += (2.0*C[abij] - C[baij]) K:eecc[abij]
.Nrm2 += (2.0*C[abij] - C[baij]) C[abij]
drop C[abij]

.Var2 += (2.0*R:eecc[abij] - R:eecc[baij]) R:eecc[abij]

store T:eecc[abij]
drop K:eecc[abij], R:eecc[abij]
store Var2[], Nrm2[], EDi2[]
drop T:ec[ai]
---- end
