// This ITF algo file was created using the GeCCo ITF translator
// Authors: J.A. Black, A. Koehn

// Created on: 11-03-2021 10:30

---- decl
index-space: ijklmn, Closed  , c
index-space: abcdef, External, e
index-space: CD, Core, C


// K-integral tensors
tensor: K:cccc[klij], K:cccc
tensor: K:eccc[bkji], K:eccc
tensor: K:eecc[baji], K:eecc

// J-integral tensors
tensor: J:eecc[abji], J:eecc
tensor: J:eeec[acbj], J:eeec

// Special integral tensors
tensor: K4E:eecc[abij], K4E:eecc

// Tensor to send to Kext
tensor: INTpp[abij], INTpp

// Fock tensors
tensor: f:cc[ji], f:cc
tensor: f:ec[ai], f:ec
tensor: f:ee[ab], f:ee

// Amplitude tensors
tensor: T:ec[aj], T:ec
tensor: T:eecc[abij], T:eecc

// Residual tensors
tensor: R:ec[ai], R:ec
tensor: R:eecc[abij], R:eecc

// Energy and DIIS scalars
tensor: ECC[], ECC
tensor: EDi1[], EDi1     // Direct 1st order energy
tensor: Nrm1[], Nrm1     // Singles amplitude norm
tensor: Var1[], Var1     // Singles residual norm
tensor: EMp1[], EMp1     // MP2 energy
tensor: ShiftS[], ShiftS

// Used in amplitdue update
tensor: L1[ai],            !Create{type:plain}

tensor: EDi2[], EDi2     // Direct 1st order energy
tensor: Nrm2[], Nrm2     // Doubles amplitude norm
tensor: Var2[], Var2     // Doubles residual norm
tensor: EMp2[], EMp2     // MP2 energy
tensor: ERef[], ERef     // Reference energy
tensor: ShiftP[], ShiftP

// Tensors needed to calculate the reference energy
tensor: f:CC[CC],   f:CC
tensor: CoreH[ii],  h:cc
tensor: CoreH[CC],  h:CC
tensor: Delta[ii],  Delta
tensor: DeltaC[CC], DeltaC

// Used in amplitude update
tensor: L2[abij],          !Create{type:plain}
tensor: C[abij],           !Create{type:plain}

// Intermediates
tensor: STIN0001aa[ji],    !Create{type:plain}
tensor: STIN0001aa[ac],    !Create{type:plain}
tensor: STIN0001aaaa[bkji], !Create{type:plain}
tensor: STIN0001abba[bkji], !Create{type:plain}
tensor: STIN0001baba[bkji], !Create{type:plain}
tensor: STIN0001aa[bj],    !Create{type:plain}
tensor: STIN0001bb[bj],    !Create{type:plain}
tensor: STIN0002aa[ki],    !Create{type:plain}
tensor: ITIN[abij],        !Create{type:plain}
tensor: STIN0001bb[lj],    !Create{type:plain}
tensor: STIN0001abab[klij], !Create{type:plain}
tensor: STIN0001baab[klij], !Create{type:plain}
tensor: STIN0001bb[bd],    !Create{type:plain}
tensor: STIN0001aaaa[dali], !Create{type:plain}
tensor: STIN0001baab[dali], !Create{type:plain}
tensor: STIN0001baba[dali], !Create{type:plain}
tensor: STIN0001abab[blji], !Create{type:plain}
tensor: STIN0001baab[akji], !Create{type:plain}
tensor: STIN0001abab[cbkj], !Create{type:plain}
tensor: STIN0001abba[cbkj], !Create{type:plain}
tensor: STIN0001bbbb[cbkj], !Create{type:plain}
tensor: STIN0001baba[klij], !Create{type:plain}
tensor: STIN0002abab[blji], !Create{type:plain}
tensor: STIN0002abba[blji], !Create{type:plain}
tensor: STIN0002baab[akji], !Create{type:plain}
tensor: STIN0002baba[akji], !Create{type:plain}
tensor: STIN0001bbbb[clkj], !Create{type:plain}
tensor: STIN0002abab[klij], !Create{type:plain}
tensor: STIN0002baab[klij], !Create{type:plain}
tensor: STIN0002bb[kj],    !Create{type:plain}
tensor: STIN0002baba[klij], !Create{type:plain}
tensor: STIN0003abab[blji], !Create{type:plain}
tensor: STIN0003abba[blji], !Create{type:plain}


---- code("Init_Amplitudes")
// Using MP2 amplitudes for starting guess
alloc T:ec[ai], EMp1[], Nrm1[]
load f:ec[ai], f:ee[aa], f:cc[ii]
.T:ec[ai] -= f:ec[ai]
denom-scale T:ec[ai], f:ee[aa] - f:cc[ii]
.EMp1[] += T:ec[ai] f:ec[ai]
.Nrm1[] += 2.0*T:ec[ai] T:ec[ai]
drop f:cc[ii], f:ee[aa], f:ec[ai]
store Nrm1[], EMp1[], T:ec[ai]

alloc EMp2[], Nrm2[]
for [i,j]:
   alloc T:eecc[abij]
   load K:eecc[**ij], f:ee[aa], f:cc[ii], f:cc[jj]
   .T:eecc[abij] -= K:eecc[abij]
   denom-scale T:eecc[abij], f:ee[aa] + f:ee[bb] - f:cc[ii] - f:cc[jj]
   .EMp2[] += (2.0*T:eecc[abij] - T:eecc[baij]) K:eecc[abij]
   .Nrm2[] += (2.0*T:eecc[abij] - T:eecc[baij]) T:eecc[abij]
   drop f:cc[jj], f:cc[ii], f:ee[aa], K:eecc[**ij]
   store T:eecc[**ij]
store Nrm2[], EMp2[]


---- code ("Ref_Energy")
alloc ERef[]
// Closed-shell contribution
load f:cc[ii], CoreH[ii], Delta[ii]
.ERef += f:cc[ij] Delta[ij]
.ERef += CoreH[ij] Delta[ij]
drop Delta, CoreH, f:cc

// Core contribution
load f:CC[CC], CoreH[CC], DeltaC[CC]
.ERef += f:CC[CD] DeltaC[CD]
.ERef += CoreH[CD] DeltaC[CD]
drop DeltaC, CoreH, f:CC
store ERef[]




---- code("Update_INTkx")
// Intermediate to pass to Kext
alloc INTpp[abij]
load T:eecc[abij]
.INTpp[abij] := T:eecc[abij]
drop T:eecc[abij]
store INTpp[abij]
---- code("Residual")
alloc R:ec[ai]
load f:ec[ai]
.R:ec[ai] += f:ec[ai]
drop f:ec[ai]
load f:cc[ji], T:ec[aj]
.R:ec[ai] -= f:cc[ji] T:ec[aj]
drop T:ec[aj], f:cc[ji]
load f:ee[ab], T:ec[bi]
.R:ec[ai] += f:ee[ab] T:ec[bi]
drop T:ec[bi], f:ee[ab]
load K:eecc[baji], J:eecc[abji], T:ec[bj]
.R:ec[ai] += (K:eecc[baji] - J:eecc[abji]) T:ec[bj]
drop T:ec[bj], J:eecc[abji], K:eecc[baji]
load K:eecc[abij], T:ec[bj]
.R:ec[ai] += K:eecc[abij] T:ec[bj]
drop T:ec[bj], K:eecc[abij]
load f:ec[bj], T:eecc[abij]
.R:ec[ai] += f:ec[bj] (T:eecc[abij] - T:eecc[baij])
.R:ec[ai] += f:ec[bj] T:eecc[abij]
drop T:eecc[abij], f:ec[bj]
load K:eccc[bkji], T:eecc[abjk]
.R:ec[ai] += .5*(K:eccc[bkji] - K:eccc[bjki]) (T:eecc[abjk] - T:eecc[bajk])
.R:ec[ai] -= .5*K:eccc[bjki] T:eecc[abjk]
.R:ec[ai] -= .5*K:eccc[bkji] T:eecc[abkj]
drop T:eecc[abkj], K:eccc[bkji]
for [j]:
    load J:eeec[acbj], T:eecc[bcij]
    .R:ec[ai] -= .5*(J:eeec[acbj] - J:eeec[abcj]) (T:eecc[bcij] - T:eecc[cbij])
    drop T:eecc[bcij], J:eeec[acbj]
    load J:eeec[abcj], T:eecc[bcij]
    .R:ec[ai] += .5*J:eeec[abcj] T:eecc[bcij]
    drop T:eecc[bcij], J:eeec[abcj]
    load J:eeec[acbj], T:eecc[cbij]
    .R:ec[ai] += .5*J:eeec[acbj] T:eecc[cbij]
    drop T:eecc[cbij], J:eeec[acbj]
alloc STIN0001aa[ji]
load f:ec[bj], T:ec[bi]
.STIN0001aa[ji] += f:ec[bj] T:ec[bi]
drop T:ec[bi], f:ec[bj]
load T:ec[aj]
.R:ec[ai] -= STIN0001aa[ji] T:ec[aj]
drop T:ec[aj]
drop STIN0001aa[ji]
alloc STIN0001aa[ki]
load K:eccc[bkji], T:ec[bj]
.STIN0001aa[ki] += (K:eccc[bkji] - K:eccc[bjki]) T:ec[bj]
.STIN0001aa[ki] += K:eccc[bkji] T:ec[bj]
drop T:ec[bj], K:eccc[bkji]
load T:ec[ak]
.R:ec[ai] -= STIN0001aa[ki] T:ec[ak]
drop T:ec[ak]
drop STIN0001aa[ki]
alloc STIN0001aa[ac]
for [j]:
    load J:eeec[acbj], T:ec[bj]
    .STIN0001aa[ac] += (J:eeec[acbj] - J:eeec[abcj]) T:ec[bj]
    .STIN0001aa[ac] += J:eeec[acbj] T:ec[bj]
    drop T:ec[bj], J:eeec[acbj]
load T:ec[ci]
.R:ec[ai] += STIN0001aa[ac] T:ec[ci]
drop T:ec[ci]
drop STIN0001aa[ac]
alloc STIN0001aa[ki]
load K:eecc[bcjk], T:eecc[bcij]
.STIN0001aa[ki] += (K:eecc[bcjk] - K:eecc[bckj]) (T:eecc[bcij] - T:eecc[cbij])
.STIN0001aa[ki] -= K:eecc[bckj] T:eecc[bcij]
.STIN0001aa[ki] -= K:eecc[cbkj] T:eecc[cbij]
drop T:eecc[cbij], K:eecc[cbkj]
load T:ec[ak]
.R:ec[ai] += .5*STIN0001aa[ki] T:ec[ak]
drop T:ec[ak]
drop STIN0001aa[ki]
alloc STIN0001aaaa[bkji], STIN0001abba[bkji], STIN0001baba[bkji]
load K:eecc[bcjk], T:ec[ci]
.STIN0001aaaa[bkji] += (K:eecc[bcjk] - K:eecc[bckj]) T:ec[ci]
.STIN0001abba[bkji] -= K:eecc[cbjk] T:ec[ci]
.STIN0001baba[bkji] += K:eecc[cbkj] T:ec[ci]
drop T:ec[ci], K:eecc[cbkj]
load T:eecc[abjk]
.R:ec[ai] += .5*STIN0001aaaa[bkji] (T:eecc[abjk] - T:eecc[bajk])
.R:ec[ai] += .5*STIN0001abba[bkji] T:eecc[abjk]
.R:ec[ai] -= .5*STIN0001baba[bkji] T:eecc[abkj]
drop T:eecc[abkj]
drop STIN0001baba[bkji], STIN0001abba[bkji], STIN0001aaaa[bkji]
alloc STIN0001aa[bj], STIN0001bb[bj]
load K:eecc[bcjk], T:ec[ck]
.STIN0001aa[bj] += (K:eecc[bcjk] - K:eecc[bckj]) T:ec[ck]
.STIN0001aa[bj] += K:eecc[bcjk] T:ec[ck]
.STIN0001bb[bj] += K:eecc[cbkj] T:ec[ck]
.STIN0001bb[bj] += (K:eecc[bcjk] - K:eecc[bckj]) T:ec[ck]
drop T:ec[ck], K:eecc[bcjk]
load T:eecc[abij]
.R:ec[ai] += STIN0001aa[bj] (T:eecc[abij] - T:eecc[baij])
.R:ec[ai] += STIN0001bb[bj] T:eecc[abij]
drop T:eecc[abij]
drop STIN0001bb[bj], STIN0001aa[bj]
alloc STIN0001aa[ck], STIN0002aa[ki]
load K:eecc[bcjk], T:ec[bj]
.STIN0001aa[ck] += (K:eecc[bcjk] - K:eecc[bckj]) T:ec[bj]
.STIN0001aa[ck] += K:eecc[cbkj] T:ec[bj]
drop T:ec[bj], K:eecc[cbkj]
load T:ec[ci]
.STIN0002aa[ki] += STIN0001aa[ck] T:ec[ci]
.R:ec[ai] -= STIN0002aa[ki] T:ec[ak]
drop T:ec[ak]
drop STIN0002aa[ki], STIN0001aa[ck]
store R:ec[ai]

alloc R:eecc[abij]
alloc ITIN[abij]
load K:eecc[abij]
.ITIN[abij] += .5*K:eecc[abij]
drop K:eecc[abij]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij]
alloc ITIN[abij]
load K:eccc[akij], T:ec[bk]
.ITIN[abij] -= K:eccc[akij] T:ec[bk]
drop T:ec[bk], K:eccc[akij]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij]
alloc ITIN[abij]
for [i]:
    load J:eeec[bcai], T:ec[cj]
    .ITIN[abij] += J:eeec[bcai] T:ec[cj]
    drop T:ec[cj], J:eeec[bcai]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij]
alloc ITIN[abij]
load f:cc[kj], T:eecc[abik]
.ITIN[abij] -= f:cc[kj] T:eecc[abik]
drop T:eecc[abik], f:cc[kj]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij]
alloc ITIN[abij]
load f:ee[bc], T:eecc[acij]
.ITIN[abij] += f:ee[bc] T:eecc[acij]
drop T:eecc[acij], f:ee[bc]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij]
alloc ITIN[abij]
load K:cccc[klij], T:eecc[abkl]
.ITIN[abij] += .25*K:cccc[klij] T:eecc[abkl]
.ITIN[abij] += .25*K:cccc[lkij] T:eecc[ablk]
drop T:eecc[ablk], K:cccc[lkij]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij]
alloc ITIN[abij]
load K:eecc[cbkj], T:eecc[acik]
.ITIN[abij] += K:eecc[cbkj] (T:eecc[acik] - T:eecc[caik])
drop T:eecc[acik], K:eecc[cbkj]
load K:eecc[cbkj], J:eecc[bckj], T:eecc[acik]
.ITIN[abij] += (K:eecc[cbkj] - J:eecc[bckj]) T:eecc[acik]
drop T:eecc[acik], J:eecc[bckj], K:eecc[cbkj]
load J:eecc[bcki], T:eecc[ackj]
.ITIN[abij] -= J:eecc[bcki] T:eecc[ackj]
drop T:eecc[ackj], J:eecc[bcki]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij]
alloc ITIN[abij]
load K4E:eecc[abij]
.ITIN[abij] += .5*K4E:eecc[abij]
drop K4E:eecc[abij]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij]
alloc STIN0001bb[lj], ITIN[abij]
load K:eecc[cdkl], T:eecc[cdkj]
.STIN0001bb[lj] -= K:eecc[cdkl] T:eecc[cdkj]
.STIN0001bb[lj] -= K:eecc[dckl] T:eecc[dckj]
.STIN0001bb[lj] += (K:eecc[cdkl] - K:eecc[cdlk]) (T:eecc[cdjk] - T:eecc[dcjk])
drop T:eecc[cdjk], K:eecc[cdkl]
load T:eecc[abil]
.ITIN[abij] += .5*STIN0001bb[lj] T:eecc[abil]
drop T:eecc[abil]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001bb[lj]
alloc STIN0001abab[klij], STIN0001baab[klij], ITIN[abij]
load K:eecc[cdkl], T:eecc[cdij]
.STIN0001abab[klij] += K:eecc[cdkl] T:eecc[cdij]
.STIN0001abab[klij] += K:eecc[dckl] T:eecc[dcij]
.STIN0001baab[klij] -= K:eecc[cdlk] T:eecc[cdij]
.STIN0001baab[klij] -= K:eecc[dclk] T:eecc[dcij]
drop T:eecc[dcij], K:eecc[dclk]
load T:eecc[abkl]
.ITIN[abij] += .125*STIN0001abab[klij] T:eecc[abkl]
.ITIN[abij] -= .125*STIN0001baab[klij] T:eecc[ablk]
drop T:eecc[ablk]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001baab[klij], STIN0001abab[klij]
alloc STIN0001bb[bd], ITIN[abij]
load K:eecc[cdkl], T:eecc[cbkl]
.STIN0001bb[bd] -= K:eecc[cdkl] T:eecc[cbkl]
.STIN0001bb[bd] -= K:eecc[cdlk] T:eecc[cblk]
.STIN0001bb[bd] += (K:eecc[cdkl] - K:eecc[cdlk]) (T:eecc[bckl] - T:eecc[cbkl])
drop T:eecc[bckl], K:eecc[cdkl]
load T:eecc[adij]
.ITIN[abij] += .5*STIN0001bb[bd] T:eecc[adij]
drop T:eecc[adij]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001bb[bd]
alloc STIN0001aaaa[dali], STIN0001baab[dali], STIN0001baba[dali], ITIN[abij]
load K:eecc[cdkl], T:eecc[acik]
.STIN0001aaaa[dali] += (K:eecc[cdkl] - K:eecc[cdlk]) (T:eecc[acik] - T:eecc[caik])
.STIN0001aaaa[dali] += K:eecc[dclk] T:eecc[acik]
.STIN0001baab[dali] += K:eecc[dckl] T:eecc[acki]
.STIN0001baba[dali] += K:eecc[cdkl] (T:eecc[acik] - T:eecc[caik])
.STIN0001baba[dali] += (K:eecc[cdkl] - K:eecc[cdlk]) T:eecc[acik]
drop T:eecc[acik], K:eecc[cdkl]
load T:eecc[dblj]
.ITIN[abij] += .5*STIN0001aaaa[dali] T:eecc[dblj]
.ITIN[abij] += .5*STIN0001baba[dali] (T:eecc[bdjl] - T:eecc[dbjl])
.ITIN[abij] += .5*STIN0001baab[dalj] T:eecc[dbil]
drop T:eecc[dbil]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001baba[dali], STIN0001baab[dali], STIN0001aaaa[dali]
alloc STIN0001abab[blji], ITIN[abij]
load K:cccc[lkij], T:ec[bk]
.STIN0001abab[blji] -= K:cccc[lkij] T:ec[bk]
drop T:ec[bk], K:cccc[lkij]
load T:ec[al]
.ITIN[abij] -= .5*STIN0001abab[blji] T:ec[al]
drop T:ec[al]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001abab[blji]
alloc STIN0001baab[akji], STIN0001baba[akji], ITIN[abij]
load K:eecc[acik], T:ec[cj]
.STIN0001baab[akji] += K:eecc[acik] T:ec[cj]
drop T:ec[cj], K:eecc[acik]
load J:eecc[acki], T:ec[cj]
.STIN0001baba[akji] -= J:eecc[acki] T:ec[cj]
drop T:ec[cj], J:eecc[acki]
load T:ec[bk]
.ITIN[abij] -= STIN0001baab[akji] T:ec[bk]
.ITIN[abij] += STIN0001baba[akij] T:ec[bk]
drop T:ec[bk]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001baba[akji], STIN0001baab[akji]
alloc STIN0001baab[akji], ITIN[abij]
load f:ec[ck], T:eecc[acij]
.STIN0001baab[akji] += f:ec[ck] T:eecc[acij]
drop T:eecc[acij], f:ec[ck]
load T:ec[bk]
.ITIN[abij] -= STIN0001baab[akji] T:ec[bk]
drop T:ec[bk]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001baab[akji]
alloc STIN0001bb[kj], ITIN[abij]
load f:ec[ck], T:ec[cj]
.STIN0001bb[kj] += f:ec[ck] T:ec[cj]
drop T:ec[cj], f:ec[ck]
load T:eecc[abik]
.ITIN[abij] -= STIN0001bb[kj] T:eecc[abik]
drop T:eecc[abik]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001bb[kj]
alloc STIN0001baab[alji], STIN0001baba[alji], ITIN[abij]
load K:eccc[clkj], T:eecc[acik]
.STIN0001baab[alji] += K:eccc[clkj] (T:eecc[acik] - T:eecc[caik])
.STIN0001baab[alji] += (K:eccc[clkj] - K:eccc[cklj]) T:eecc[acik]
.STIN0001baba[alji] += K:eccc[cklj] T:eecc[acki]
drop T:eecc[acki], K:eccc[cklj]
load T:ec[bl]
.ITIN[abij] -= STIN0001baab[alji] T:ec[bl]
.ITIN[abij] += STIN0001baba[alij] T:ec[bl]
drop T:ec[bl]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001baba[alji], STIN0001baab[alji]
alloc STIN0001abab[klij], STIN0001baab[klij], ITIN[abij]
load K:eccc[ckli], T:ec[cj]
.STIN0001abab[klij] -= K:eccc[ckli] T:ec[cj]
.STIN0001baab[klij] += K:eccc[clki] T:ec[cj]
drop T:ec[cj], K:eccc[clki]
load T:eecc[abkl]
.ITIN[abij] -= .5*STIN0001abab[klij] T:eecc[abkl]
.ITIN[abij] += .5*STIN0001baab[klij] T:eecc[ablk]
drop T:eecc[ablk]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001baab[klij], STIN0001abab[klij]
alloc STIN0001bb[kj], ITIN[abij]
load K:eccc[cklj], T:ec[cl]
.STIN0001bb[kj] -= K:eccc[cklj] T:ec[cl]
.STIN0001bb[kj] += (K:eccc[clkj] - K:eccc[cklj]) T:ec[cl]
drop T:ec[cl], K:eccc[clkj]
load T:eecc[abik]
.ITIN[abij] += STIN0001bb[kj] T:eecc[abik]
drop T:eecc[abik]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001bb[kj]
alloc STIN0001baab[akji], ITIN[abij]
for [k]:
    load J:eeec[acdk], T:eecc[cdij]
    .STIN0001baab[akji] -= J:eeec[acdk] T:eecc[cdij]
    drop T:eecc[cdij], J:eeec[acdk]
    load J:eeec[adck], T:eecc[dcij]
    .STIN0001baab[akji] -= J:eeec[adck] T:eecc[dcij]
    drop T:eecc[dcij], J:eeec[adck]
load T:ec[bk]
.ITIN[abij] += .5*STIN0001baab[akji] T:ec[bk]
drop T:ec[bk]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001baab[akji]
alloc STIN0001abab[cbkj], STIN0001abba[cbkj], STIN0001bbbb[cbkj], ITIN[abij]
for [k]:
    load J:eeec[bdck], T:ec[dj]
    .STIN0001abab[cbkj] += J:eeec[bdck] T:ec[dj]
    drop T:ec[dj], J:eeec[bdck]
    load J:eeec[bcdk], T:ec[dj]
    .STIN0001abba[cbkj] -= J:eeec[bcdk] T:ec[dj]
    drop T:ec[dj], J:eeec[bcdk]
    load J:eeec[bdck], T:ec[dj]
    .STIN0001bbbb[cbkj] += (J:eeec[bdck] - J:eeec[bcdk]) T:ec[dj]
    drop T:ec[dj], J:eeec[bdck]
load T:eecc[acik]
.ITIN[abij] += STIN0001abab[cbkj] (T:eecc[acik] - T:eecc[caik])
.ITIN[abij] += STIN0001bbbb[cbkj] T:eecc[acik]
.ITIN[abij] += STIN0001abba[cbki] T:eecc[ackj]
drop T:eecc[ackj]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001bbbb[cbkj], STIN0001abba[cbkj], STIN0001abab[cbkj]
alloc STIN0001bb[bc], ITIN[abij]
for [k]:
    load J:eeec[bcdk], T:ec[dk]
    .STIN0001bb[bc] -= J:eeec[bcdk] T:ec[dk]
    drop T:ec[dk], J:eeec[bcdk]
    load J:eeec[bdck], T:ec[dk]
    .STIN0001bb[bc] += (J:eeec[bdck] - J:eeec[bcdk]) T:ec[dk]
    drop T:ec[dk], J:eeec[bdck]
load T:eecc[acij]
.ITIN[abij] -= STIN0001bb[bc] T:eecc[acij]
drop T:eecc[acij]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0001bb[bc]
alloc STIN0001baab[klij], STIN0001baba[klij], STIN0002abab[blji], STIN0002abba[blji], ITIN[abij]
load K:eccc[clki], T:ec[cj]
.STIN0001baab[klij] += K:eccc[clki] T:ec[cj]
.STIN0001baba[klij] -= K:eccc[ckli] T:ec[cj]
drop T:ec[cj], K:eccc[ckli]
load T:ec[bk]
.STIN0002abab[blji] += STIN0001baab[klij] T:ec[bk]
.STIN0002abba[blji] += STIN0001baba[klij] T:ec[bk]
.ITIN[abij] += .5*STIN0002abab[blji] T:ec[al]
.ITIN[abij] -= .5*STIN0002abba[blij] T:ec[al]
drop T:ec[al]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0002abba[blji], STIN0002abab[blji], STIN0001baba[klij], STIN0001baab[klij]
alloc STIN0001baab[daki], STIN0001baba[daki], STIN0002baab[akji], STIN0002baba[akji], ITIN[abij]
for [k]:
    load J:eeec[adck], T:ec[ci]
    .STIN0001baab[daki] += J:eeec[adck] T:ec[ci]
    drop T:ec[ci], J:eeec[adck]
    load J:eeec[acdk], T:ec[ci]
    .STIN0001baba[daki] -= J:eeec[acdk] T:ec[ci]
    drop T:ec[ci], J:eeec[acdk]
load T:ec[dj]
.STIN0002baab[akji] += STIN0001baba[daki] T:ec[dj]
.STIN0002baba[akji] += STIN0001baab[daki] T:ec[dj]
.ITIN[abij] += .5*STIN0002baab[akji] T:ec[bk]
.ITIN[abij] -= .5*STIN0002baba[akij] T:ec[bk]
drop T:ec[bk]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0002baba[akji], STIN0002baab[akji], STIN0001baba[daki], STIN0001baab[daki]
alloc STIN0001baab[klij], STIN0002abab[blji], ITIN[abij]
load K:eecc[cdlk], T:eecc[cdij]
.STIN0001baab[klij] -= K:eecc[cdlk] T:eecc[cdij]
.STIN0001baab[klij] -= K:eecc[dclk] T:eecc[dcij]
drop T:eecc[dcij], K:eecc[dclk]
load T:ec[bk]
.STIN0002abab[blji] += STIN0001baab[klij] T:ec[bk]
.ITIN[abij] -= .25*STIN0002abab[blji] T:ec[al]
drop T:ec[al]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0002abab[blji], STIN0001baab[klij]
alloc STIN0001abab[clkj], STIN0001abba[clkj], STIN0001bbbb[clkj], STIN0002baab[alji], STIN0002baba[alji], ITIN[abij]
load K:eecc[cdkl], T:ec[dj]
.STIN0001abab[clkj] += K:eecc[cdkl] T:ec[dj]
.STIN0001abba[clkj] -= K:eecc[dckl] T:ec[dj]
.STIN0001bbbb[clkj] += (K:eecc[cdkl] - K:eecc[cdlk]) T:ec[dj]
drop T:ec[dj], K:eecc[cdkl]
load T:eecc[acik]
.STIN0002baab[alji] += STIN0001abab[clkj] (T:eecc[acik] - T:eecc[caik])
.STIN0002baab[alji] += STIN0001bbbb[clkj] T:eecc[acik]
.STIN0002baba[alji] -= STIN0001abba[clkj] T:eecc[acki]
drop T:eecc[acki]
load T:ec[bl]
.ITIN[abij] -= STIN0002baab[alji] T:ec[bl]
.ITIN[abij] += STIN0002baba[alij] T:ec[bl]
drop T:ec[bl]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0002baba[alji], STIN0002baab[alji], STIN0001bbbb[clkj], STIN0001abba[clkj], STIN0001abab[clkj]
alloc STIN0001bb[cl], STIN0002baab[alji], ITIN[abij]
load K:eecc[dckl], T:ec[dk]
.STIN0001bb[cl] -= K:eecc[dckl] T:ec[dk]
.STIN0001bb[cl] += (K:eecc[cdkl] - K:eecc[cdlk]) T:ec[dk]
drop T:ec[dk], K:eecc[cdkl]
load T:eecc[acij]
.STIN0002baab[alji] += STIN0001bb[cl] T:eecc[acij]
drop T:eecc[acij]
load T:ec[bl]
.ITIN[abij] += STIN0002baab[alji] T:ec[bl]
drop T:ec[bl]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0002baab[alji], STIN0001bb[cl]
alloc STIN0001abab[dlkj], STIN0001baab[dlkj], STIN0002abab[klij], STIN0002baab[klij], ITIN[abij]
load K:eecc[dckl], T:ec[cj]
.STIN0001abab[dlkj] -= K:eecc[dckl] T:ec[cj]
.STIN0001baab[dlkj] += K:eecc[dclk] T:ec[cj]
drop T:ec[cj], K:eecc[dclk]
load T:ec[di]
.STIN0002abab[klij] += STIN0001abab[dlkj] T:ec[di]
.STIN0002baab[klij] += STIN0001baab[dlkj] T:ec[di]
drop T:ec[di]
load T:eecc[abkl]
.ITIN[abij] -= .25*STIN0002abab[klij] T:eecc[abkl]
.ITIN[abij] += .25*STIN0002baab[klij] T:eecc[ablk]
drop T:eecc[ablk]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0002baab[klij], STIN0002abab[klij], STIN0001baab[dlkj], STIN0001abab[dlkj]
alloc STIN0001bb[dk], STIN0002bb[kj], ITIN[abij]
load K:eecc[cdlk], T:ec[cl]
.STIN0001bb[dk] -= K:eecc[cdlk] T:ec[cl]
.STIN0001bb[dk] += (K:eecc[cdkl] - K:eecc[cdlk]) T:ec[cl]
drop T:ec[cl], K:eecc[cdkl]
load T:ec[dj]
.STIN0002bb[kj] += STIN0001bb[dk] T:ec[dj]
drop T:ec[dj]
load T:eecc[abik]
.ITIN[abij] += STIN0002bb[kj] T:eecc[abik]
drop T:eecc[abik]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0002bb[kj], STIN0001bb[dk]
alloc STIN0001baab[dlki], STIN0001baba[dlki], STIN0002baab[klij], STIN0002baba[klij], STIN0003abab[blji], STIN0003abba[blji], ITIN[abij]
load K:eecc[dclk], T:ec[ci]
.STIN0001baab[dlki] += K:eecc[dclk] T:ec[ci]
.STIN0001baba[dlki] -= K:eecc[cdlk] T:ec[ci]
drop T:ec[ci], K:eecc[cdlk]
load T:ec[dj]
.STIN0002baab[klij] += STIN0001baba[dlki] T:ec[dj]
.STIN0002baba[klij] += STIN0001baab[dlki] T:ec[dj]
.STIN0003abab[blji] += STIN0002baab[klij] T:ec[bk]
.STIN0003abba[blji] += STIN0002baba[klij] T:ec[bk]
.ITIN[abij] -= .25*STIN0003abab[blji] T:ec[al]
.ITIN[abij] += .25*STIN0003abba[blij] T:ec[al]
drop T:ec[al]
.R:eecc[abij] += ITIN[abij]
.R:eecc[abij] += ITIN[baji]
drop ITIN[abij], STIN0003abba[blji], STIN0003abab[blji], STIN0002baba[klij], STIN0002baab[klij], STIN0001baba[dlki], STIN0001baab[dlki]
store R:eecc[abij]

alloc ECC[]
load K:eecc[abij], T:eecc[abij]
.ECC[] += .5*(K:eecc[abij] - K:eecc[abji]) (T:eecc[abij] - T:eecc[baij])
.ECC[] += .5*K:eecc[abij] T:eecc[abij]
.ECC[] += .5*K:eecc[baij] T:eecc[baij]
drop T:eecc[baij], K:eecc[baij]
load f:ec[ai], T:ec[ai]
.ECC[] += 2.*f:ec[ai] T:ec[ai]
drop T:ec[ai], f:ec[ai]
alloc STIN0001aa[bj]
load K:eecc[abij], T:ec[ai]
.STIN0001aa[bj] += (K:eecc[abij] - K:eecc[abji]) T:ec[ai]
.STIN0001aa[bj] += K:eecc[baji] T:ec[ai]
drop T:ec[ai], K:eecc[baji]
load T:ec[bj]
.ECC[] += STIN0001aa[bj] T:ec[bj]
drop T:ec[bj]
drop STIN0001aa[bj]
store ECC[]


---- code("Update_Amplitudes")
// Update singles
load R:ec[ai]
load f:ee[aa], f:cc[ii], ShiftS[]
denom-scale R:ec[ai], f:ee[aa] - f:cc[ii] + ShiftS[]
drop ShiftS[], f:cc[ii], f:ee[aa]

alloc EDi1[], Nrm1[], Var1[]
load T:ec[ai], f:ec[ai]
.T:ec[ai] -= R:ec[ai]
.EDi1[] += 2.0*T:ec[ai] f:ec[ai]
.Nrm1[] += 2.0*T:ec[ai] T:ec[ai]
.Var1[] += 2.0*R:ec[ai] R:ec[ai]
drop f:ec[ai]
store T:ec[ai]
store Var1[], Nrm1[], EDi1[]
drop R:ec[ai]

// Update doubles
load T:ec[ai]
alloc EDi2[], Nrm2[], Var2[]
load R:eecc[abij], K:eecc[abij]
load T:eecc[abij]
load f:ee[aa], f:cc[ii], ShiftP[]
denom-scale R:eecc[abij], f:ee[aa] + f:ee[bb] - f:cc[ii] - f:cc[jj] + ShiftP[]
drop ShiftP[], f:cc[ii], f:ee[aa]

.T:eecc[abij] -= R:eecc[abij]

alloc C[abij]
.C[abij] += T:eecc[abij]
.C[abij] += T:ec[ai] T:ec[bj]
.EDi2 += (2.0*C[abij] - C[baij]) K:eecc[abij]
.Nrm2 += (2.0*C[abij] - C[baij]) C[abij]
drop C[abij]

.Var2 += (2.0*R:eecc[abij] - R:eecc[baij]) R:eecc[abij]

store T:eecc[abij]
drop K:eecc[abij], R:eecc[abij]
store Var2[], Nrm2[], EDi2[]
drop T:ec[ai]

---- end
