from python_interface.gecco_interface import *
from python_interface.python_blocks.Arnes_helfer import *


###################################################################
###################################################################
#Building different hamiltonians for Preconditioner and Perturbation theory
###################################################################
###################################################################





#---------------------------------------------------------------------------------
#Building Dyalls 0th order Hamiltonian
#---------------------------------------------------------------------------------
new_target('DyallsHamiltonian')
heading("Building of Dyall's 0th order Hamiltonian")
depend('EVAL_F_EFF_DIAG')

depend('H0')





DEF_OP_FROM_OCC({
        LABEL:'HAM_D',
        DESCR:'H,H|P,P|V,V|VV,VV'})

DEF_ME_LIST({
        LIST:'HAM_D_LIST',
        OPERATOR:'HAM_D',
        IRREP:1,
        '2MS':0,
        AB_SYM:+1})

debug_MEL('HAM_D_LIST',info_only=True)


 


EXPAND_OP_PRODUCT({
        LABEL:'FORM_HAM_D',
        OP_RES:'HAM_D',
        OPERATORS:['HAM_D','FOCK_EFF_DIAG','HAM_D'],
        IDX_SV:[1,2,1],
        NEW:True})

EXPAND_OP_PRODUCT({
        LABEL:'FORM_HAM_D',
        OP_RES:'HAM_D',
        OPERATORS:['HAM_D','H','HAM_D'],
        IDX_SV:[1,2,1],
        LABEL_DESCR:'2,,V,V',
        NEW:False})
EXPAND_OP_PRODUCT({
        LABEL:'FORM_HAM_D',
        OP_RES:'HAM_D',
        OPERATORS:['HAM_D','H','HAM_D'],
        IDX_SV:[1,2,1],
        LABEL_DESCR:'2,,VV,VV',
        NEW:False})

debug_FORM('FORM_HAM_D')




OPTIMIZE({
        LABELS_IN:'FORM_HAM_D',
        LABEL_OPT:'FOPT_HAM_D'})

EVALUATE({
        FORM:'FOPT_HAM_D'})

debug_MEL('HAM_D_LIST')




new_target('HAMILTONIAN_HAM_D')
depend('EVAL_F_EFF')
depend('H0')
depend('DyallsHamiltonian')


DEF_HAMILTONIAN({
        LABEL:'V',
        MIN_RANK:0, 
        MAX_RANK:2})
DEF_ME_LIST({LIST:'V_LST',
        OPERATOR:'V',
        IRREP:1,
        '2MS':0,
        AB_SYM:+1})

EXPAND_OP_PRODUCT({
        LABEL:'FORM_V',
        OP_RES:'V',
        OPERATORS:['V','H','V'],
        IDX_SV:[1,2,1],
        NEW:True})

EXPAND_OP_PRODUCT({
        LABEL:'FORM_V',
        OP_RES:'V',
        OPERATORS:['V','HAM_D','V'],
        IDX_SV:[1,2,1],
        FAC:-1.0,
        NEW:False})

OPTIMIZE({
        LABELS_IN:'FORM_V', 
        LABEL_OPT:'FOPT_V'})
EVALUATE({
        FORM:'FOPT_V'})
