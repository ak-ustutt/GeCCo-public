---- decl
index-space: pqrstuvw , Active    , a
index-space: ijkl     , Closed    , c
index-space: gh       , ClosedF   , f
index-space: abcd     , External  , e
index-space: mno      , Internal  , i

tensor:  H[ai]
tensor:  GAM0[]
tensor:  GAM0[pq]
tensor:  H[ap]
tensor:  GAM0[qprs]
tensor:  H[ip]
tensor:  H[ij]
tensor:  T2g[pj]
tensor:  GAM0[si]
tensor:  H[pq]
tensor:  H[aick]
tensor:  H[iack]

tensor:  O2g[ai]
tensor:  O2g[apqi]
tensor:  O2g[aq]
tensor:  O2g[aqrs]
tensor:  O2g[pi]
tensor:  O2g[prqi]
tensor:  O2g[abij]

// Intermediates
tensor: STIN0001[pi]        , !Create{type:disk}
tensor: STIN0001[ap]        , !Create{type:disk}
tensor: STIN0001[ai]        , !Create{type:disk}
tensor: STIN0001[pq]        , !Create{type:disk}

---- code("Test")
alloc  O2g[ai]
load H[ai], GAM0[]
.O2g[ai] += H[ai] GAM0[]
drop GAM0[], H[ai]
store O2g[ai]

alloc  O2g[apqi]
load GAM0[pq], H[ai]
.O2g[apqi] -= GAM0[pq] H[ai]
drop H[ai], GAM0[pq]
store O2g[apqi]

alloc  O2g[aq]
load H[ap], GAM0[pq]
.O2g[aq] += H[ap] GAM0[pq]
drop GAM0[pq], H[ap]
store O2g[aq]

alloc  O2g[aqrs]
load H[ap], GAM0[qprs]
.O2g[aqrs] += H[ap] (GAM0[qprs] - GAM0[pqrs])
drop GAM0[qprs], H[ap]
store O2g[aqrs]

alloc  O2g[pi]
load H[ip], GAM0[]
.O2g[pi] += H[ip] GAM0[]
drop GAM0[], H[ip]
load GAM0[pq], H[iq]
.O2g[pi] -= GAM0[pq] H[iq]
drop H[iq], GAM0[pq]
store O2g[pi]

alloc  O2g[prqi]
load GAM0[pq], H[ir]
.O2g[prqi] += GAM0[pq] H[ir]
drop H[ir], GAM0[pq]
load GAM0[pqrs], H[is]
.O2g[pqri] += (GAM0[pqrs] - GAM0[qprs]) H[is]
drop H[is], GAM0[pqrs]
store O2g[pqri]

load O2g[pi]
alloc STIN0001[pi]
load H[ij], T2g[pj]
.STIN0001[pi] -= H[ij] T2g[pj]
drop T2g[pj], H[ij]
load GAM0[]
.O2g[pi] += STIN0001[pi] GAM0[]
drop GAM0[]
drop STIN0001[pi]
alloc STIN0001[pi]
load H[ij], T2g[pj]
.STIN0001[pi] -= H[ij] T2g[pj]
drop T2g[pj], H[ij]
load GAM0[pq]
.O2g[pi] -= GAM0[pq] STIN0001[qi]
drop GAM0[pq]
drop STIN0001[pi]
store O2g[pi]

load O2g[prqi]
alloc STIN0001[pi]
load H[ij], T2g[pj]
.STIN0001[pi] -= H[ij] T2g[pj]
drop T2g[pj], H[ij]
load GAM0[pq]
.O2g[prqi] += GAM0[pq] STIN0001[ri]
drop GAM0[pq]
drop STIN0001[pi]
alloc STIN0001[pi]
load H[ij], T2g[pj]
.STIN0001[pi] -= H[ij] T2g[pj]
drop T2g[pj], H[ij]
load GAM0[si]
.O2g[pqri] += GAM0[si] (STIN0001[pqrs] - STIN0001[qprs])
drop GAM0[si]
drop STIN0001[pi]
store O2g[pqri]

load O2g[ai]
alloc STIN0001[ap]
load H[ap], GAM0[]
.STIN0001[ap] += H[ap] GAM0[]
drop GAM0[], H[ap]
load T2g[pi]
.O2g[ai] += STIN0001[ap] T2g[pi]
drop T2g[pi]
drop STIN0001[ap]
store O2g[ai]

load O2g[apqi]
alloc STIN0001[ai]
load H[ap], T2g[pi]
.STIN0001[ai] += H[ap] T2g[pi]
drop T2g[pi], H[ap]
load GAM0[pq]
.O2g[apqi] -= GAM0[pq] STIN0001[ai]
drop GAM0[pq]
drop STIN0001[ai]
store O2g[apqi]

load O2g[pi]
alloc STIN0001[pq]
load H[pq], GAM0[]
.STIN0001[pq] += H[pq] GAM0[]
drop GAM0[], H[pq]
load T2g[qi]
.O2g[pi] += STIN0001[pq] T2g[qi]
drop T2g[qi]
drop STIN0001[pq]
alloc STIN0001[pr]
load GAM0[pq], H[rq]
.STIN0001[pr] -= GAM0[pq] H[rq]
drop H[rq], GAM0[pq]
load T2g[qi]
.O2g[pi] += STIN0001[pq] T2g[qi]
drop T2g[qi]
drop STIN0001[pr]
store O2g[pi]

load O2g[prqi]
alloc STIN0001[pi]
load H[pq], T2g[qi]
.STIN0001[pi] += H[pq] T2g[qi]
drop T2g[qi], H[pq]
load GAM0[pq]
.O2g[prqi] += GAM0[pq] STIN0001[ri]
drop GAM0[pq]
drop STIN0001[pi]
alloc STIN0001[pi]
load H[pq], T2g[qi]
.STIN0001[pi] += H[pq] T2g[qi]
drop T2g[qi], H[pq]
load GAM0[pqrs]
.O2g[pqri] += GAM0[pqrs] STIN0001[si]
drop GAM0[pqrs]
drop STIN0001[pi]
store O2g[pqri]

alloc  O2g[abij]
alloc STIN0001[pi]
load T2g[pi], GAM0[]
.STIN0001[pi] += T2g[pi] GAM0[]
drop GAM0[], T2g[pi]
load H[aick]
.O2g[abij] += (H[aick] - H[iack]) (STIN0001[cbkj] - STIN0001[bckj])
drop H[aick]
drop STIN0001[pi]
store O2g[abij]

---- end
