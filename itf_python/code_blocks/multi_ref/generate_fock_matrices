---- code("Generate_Fock_Matrices")
alloc f:ac[**]
load fc:ca[**]
.f:ac[pi] := fc:ca[ip]
drop fc:ca[**]
load deltacc[**], J:ccca[****]
.f:ac[pi] += (2.*J:ccca[jkip] - J:ccca[ikjp]) deltacc[kj]
drop J:ccca[****], deltacc[**]
store f:ac[**]

alloc f:ec[**]
load fc:ec[**]
.f:ec[ai] += fc:ec[ai]
drop fc:ec[**]
load deltacc[**], J:eccc[****]
.f:ec[ai] += (2.*J:eccc[aijk] - J:eccc[ajik]) deltacc[kj]
drop J:eccc[****], deltacc[**]
store f:ec[**]

alloc f:cc[**]
load fc:cc[**]
.f:cc[ij] := fc:cc[ij]
drop fc:cc[**]
load deltacc[**], K:cccc[****]
.f:cc[ij] += (2.*K:cccc[jkil] - K:cccc[jkli]) deltacc[lk]
drop K:cccc[****], deltacc[**]
store f:cc[**]

alloc f:ea[**]
load fc:ea[**]
.f:ea[ap] := fc:ea[ap]
drop fc:ea[**]
load deltacc[**]
load J:eacc[****], J:ecca[****]
.f:ea[ap] += (2.*J:eacc[apij] - J:ecca[ajip])  deltacc[ji]
drop J:ecca[****], J:eacc[****]
drop deltacc[**]
store f:ea[**]

alloc f:ee[**]
load fc:ee[**]
.f:ee[ab] := fc:ee[ab]
drop fc:ee[**]
load deltacc[**]
load J:eecc[****], K:eecc[****]
.f:ee[ab] += (2.*J:eecc[baij] - K:eecc[baji]) deltacc[ji]
drop K:eecc[****], J:eecc[****]
drop deltacc[**]
store f:ee[**]

alloc f:aa[**]
load fc:aa[**]
.f:aa[pq] := fc:aa[pq]
drop fc:aa[**]
load deltacc[**]
load J:ccaa[****], K:ccaa[****]
.f:aa[pq] += (2.*J:ccaa[ijqp] - K:ccaa[jiqp]) deltacc[ji]
drop K:ccaa[****], J:ccaa[****]
drop deltacc[**]
store f:aa[**]

alloc g:ac[**]
load f:ac[**]
.g:ac[pi] := f:ac[pi]
drop f:ac[**]
load J:caaa[****], Dm1[**]
.g:ac[pi] += (J:caaa[ipqr] - .5*J:caaa[irqp]) Dm1[qr]
drop Dm1[**], J:caaa[****]
store g:ac[**]

alloc g:ec[**]
load f:ec[**]
.g:ec[ai] := f:ec[ai]
drop f:ec[**]
load Dm1[**]
load J:ecaa[****], K:ecaa[****]
.g:ec[ai] += (J:ecaa[aipq] - .5*K:ecaa[aipq]) Dm1[pq]
drop K:ecaa[****], J:ecaa[****]
drop Dm1[**]
store g:ec[**]

alloc g:cc[**]
load f:cc[**]
.g:cc[ij] := f:cc[ij]
drop f:cc[**]
load Dm1[**]
load J:ccaa[****], K:ccaa[****]
.g:cc[ij] += (J:ccaa[jipq] - .5*K:ccaa[jiqp]) Dm1[pq]
drop K:ccaa[****], J:ccaa[****]
drop Dm1[**]
store g:cc[**]

alloc g:ea[**]
load f:ea[**]
.g:ea[ap] := f:ea[ap]
drop f:ea[**]
load J:eaaa[****], Dm1[**]
.g:ea[ap] += (J:eaaa[apqr] - .5*J:eaaa[arqp]) Dm1[qr]
drop Dm1[**], J:eaaa[****]
store g:ea[**]

alloc g:ee[**]
load f:ee[**]
.g:ee[ab] := f:ee[ab]
drop f:ee[**]
load Dm1[**]
load J:eeaa[****], K:eeaa[****]
.g:ee[ab] += (J:eeaa[bapq] - .5*K:eeaa[baqp]) Dm1[pq]
drop K:eeaa[****], J:eeaa[****]
drop Dm1[**]
store g:ee[**]

alloc g:aa[**]
load f:aa[**]
.g:aa[pq] := f:aa[pq]
drop f:aa[**]
load Dm1[**]
load K:aaaa[****]
.g:aa[pq] += (K:aaaa[qrps] - .5*K:aaaa[qrsp])  Dm1[rs]
drop K:aaaa[****]
drop Dm1[**]
store g:aa[**]

// Construct active preconditoner blocks
alloc A1[**]
load f:aa[**], Dm1[**], K:aaaa[pqrs]
.A1[pq] += 2.*f:aa[pq]
.A1[ps] -= f:aa[pq] Dm1[qs]
.A1[pq] += K:aaaa[pqrs] Dm1[rs]
drop K:aaaa[pqrs], Dm1[**], f:aa[**]
store A1[**]

alloc A4[**]
load f:aa[**], Dm1[**]
.A4[ps] += f:aa[pq] Dm1[qs]
drop Dm1[**], f:aa[**]
store A4[**]

