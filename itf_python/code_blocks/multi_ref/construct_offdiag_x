---- code("Construct_Offdiag_X")
// Construct the off-diagonal contributions to the
// X transfomration matrix (for S1, S0, and I1)
// X12 = -X1 X1^+ S12 X2
// SX12 = (S12 X2)

load S3A:S1[pq], S3B:S1[pq]
load X2B:S1[pqrs], X2A:S1[pqrs], X4A:S1[pqrs], X4B:S1[pqrs]

// S1 residual transformation
// -0.5 factor from -X1 X1^+ ... and another factor 0.5 for not yet clear reasons (see below)
alloc XS12a:S1[rs], XS12b:S1[rs]

//.XS12a:S1[rs] -= .5*S3A:S1[pq] X2A:S1[pqrs]
.XS12a:S1[rs] -= .25*S3A:S1[pq] X2A:S1[pqrs]
.XS12a:S1[rs] -= .25*S3B:S1[pq] X4A:S1[pqrs]

//.XS12b:S1[rs] -= .5*S3A:S1[pq] X4B:S1[pqrs]
.XS12b:S1[rs] -= .25*S3A:S1[pq] X4B:S1[pqrs]
.XS12b:S1[rs] -= .25*S3B:S1[pq] X2B:S1[pqrs]

store XS12b:S1[rs], XS12a:S1[rs]

// S1 amplitude back transformation
// prefactor 0.5 is currently empirical and not well understood
alloc SX12a:S1[rs], SX12b:S1[rs]

.SX12a:S1[rs] -= .5*S3A:S1[pq]  (X4A:S1[pqrs] + 2*X2A:S1[pqrs])
.SX12a:S1[rs] -= .5*S3B:S1[pq] (2*X4A:S1[pqrs] + X2A:S1[pqrs])

.SX12b:S1[rs] -= .5*S3A:S1[pq]  (X2B:S1[pqrs] + 2*X4B:S1[pqrs])
.SX12b:S1[rs] -= .5*S3B:S1[pq] (2*X2B:S1[pqrs] + X4B:S1[pqrs])

store SX12b:S1[rs], SX12a:S1[rs]

drop X4B:S1[pqrs], X4A:S1[pqrs], X2A:S1[pqrs], X2B:S1[pqrs]
drop S3B:S1[pq], S3A:S1[pq]

