---- code("Transform_Residual")
// I1
alloc OR:ac[pi]
load R:ac[pi], X1:I1[pq]
.OR:ac[qi] += 2*R:ac[pi] X1:I1[pq]
drop X1:I1[pq], R:ac[pi]
store OR:ac[pi]

alloc OR:aaac[pqri]
load R:aaac[pqri], X2:I1[pqrstu]
.OR:aaac[stui] += R:aaac[pqri] X2:I1[pqrstu]
drop X2:I1[pqrstu], R:aaac[pqri]
store OR:aaac[pqri]

// I2
alloc OR:aacc[pqij]
load R:aacc[pqij], X2:I2[pqrs]
.OR:aacc[rsij] += 2*R:aacc[pqij] X2:I2[pqrs]
drop X2:I2[pqrs], R:aacc[pqij]
store OR:aacc[pqij]

// S0
alloc OR:ea[ap]
load R:ea[ap], X1:S0[pq]
.OR:ea[aq] += 2*R:ea[ap] X1:S0[pq]
drop X1:S0[pq], R:ea[ap]
store OR:ea[ap]

alloc OR:eaaa[apqr]
load R:eaaa[apqr], X2:S0[pqrstu]
.OR:eaaa[astu] += R:eaaa[apqr] X2:S0[pqrstu]
drop X2:S0[pqrstu], R:eaaa[apqr]
store OR:eaaa[apqr]

// S1
alloc OR:eaac[apqi]
load R:eaac[apqi], R:eaca[apiq], X2B:S1[pqrs], X4B:S1[pqrs]
.OR:eaac[arsi] += 1.5*R:eaac[apqi] X2B:S1[pqrs]
.OR:eaac[arsi] += 1.5*R:eaca[apiq] X4B:S1[pqrs]
drop X4B:S1[pqrs], X2B:S1[pqrs], R:eaca[apiq], R:eaac[apqi]

// Off-diag orthogonalisation term
load XS12b:S1[rs], R:ec[ai]
.OR:eaac[arsi] += 1.5*XS12b:S1[sr] R:ec[ai]
drop R:ec[ai], XS12b:S1[rs]
store OR:eaac[apqi]

alloc OR:eaca[apiq]
load R:eaca[apiq], R:eaac[apqi], X4A:S1[pqrs], X2A:S1[pqrs]
.OR:eaca[aris] += 1.5*R:eaac[apqi] X4A:S1[pqrs]
.OR:eaca[aris] += 1.5*R:eaca[apiq] X2A:S1[pqrs]
drop X2A:S1[pqrs], X4A:S1[pqrs], R:eaac[apqi], R:eaca[apiq]

// Off-diag orthogonalisation term
load XS12a:S1[rs], R:ec[ai]
.OR:eaca[aris] += 1.5*XS12a:S1[sr] R:ec[ai]
drop R:ec[ai], XS12a:S1[rs]
store OR:eaca[apiq]

// S2
alloc OR:eacc[apij]
load R:eacc[apij], X2:S2[pq]
.OR:eacc[aqij] += 2*R:eacc[apij] X2:S2[pq]
drop X2:S2[pq], R:eacc[apij]
store OR:eacc[apij]

// P0
alloc OR:eeaa[abpq]
load R:eeaa[abpq], X2:P0[pqrs]
.OR:eeaa[abrs] += 2*R:eeaa[abpq] X2:P0[pqrs]
drop X2:P0[pqrs], R:eeaa[abpq]
store OR:eeaa[abpq]

// P1
alloc OR:eeac[abpi]
load R:eeac[abpi], X2:P1[pq]
.OR:eeac[abqi] += 2*R:eeac[abpi] X2:P1[pq]
drop X2:P1[pq], R:eeac[abpi]
store OR:eeac[abpi]

