---- code("Update_Amplitudes")
// I1
alloc Nrm1[]
load T:ac[pi]
alloc R:ac[pi]
load OT:ac[qi], X1:I1[pq]
.R:ac[pi] := OT:ac[qi] X1:I1[pq]
.T:ac[pi] += R:ac[pi]
.Nrm1[] += 2.*T:ac[pi] T:ac[pi]
drop X1:I1[pq], OT:ac[qi]
store R:ac[pi]
store T:ac[pi]
store Nrm1[]

alloc Nrm2[]
load T:aaac[pqri]
alloc R:aaac[pqri]
load OT:aaac[stui], X2:I1[pqrstu]
.R:aaac[pqri] := OT:aaac[stui] X2:I1[pqrstu]
.T:aaac[pqri] += R:aaac[pqri]
.Nrm2[] += T:aaac[pqri] T:aaac[pqri]
drop X2:I1[pqrstu], OT:aaac[stui]
store R:aaac[pqri]
store T:aaac[pqri]
store Nrm2[]

// I2
load Nrm2[]
load T:aacc[pqij]
alloc R:aacc[pqij]
load OT:aacc[rsij], X2:I2[pqrs]
.R:aacc[pqij] := OT:aacc[rsij] X2:I2[pqrs]
.T:aacc[pqij] += R:aacc[pqij]
.Nrm2[] += (2.*T:aacc[pqij] - T:aacc[qpij]) T:aacc[pqij]
drop X2:I2[pqrs], OT:aacc[rsij]
store R:aacc[pqij]
store T:aacc[pqij]
store Nrm2[]

// S0
load Nrm1[]
load T:ea[ap] 
alloc R:ea[ap]
load OT:ea[aq], X1:S0[pq]
.R:ea[ap] := OT:ea[aq] X1:S0[pq]
.T:ea[ap] += R:ea[ap]
.Nrm1[] += 2.*T:ea[ap] T:ea[ap]
drop X1:S0[pq], OT:ea[aq]
store R:ea[ap]
store T:ea[ap]

// S1
load Var1[]
load R:ec[ai]
load g:ee[aa], g:cc[ii], ShiftS[]
denom-scale R:ec[ai], g:ee[aa] - g:cc[ii] + ShiftS[]
drop ShiftS[], g:cc[ii], g:ee[aa]
//load T:ec[ai]
//.T:ec[ai] -= R:ec[ai]

// Add off-diag orthogonalisation term
// unclear ---> Factor of 2 comes from effective weighting between T:ec and T:eaac/T:eaca
load SX12a:S1[pq], OT:eaca[apiq], SX12b:S1[pq], OT:eaac[apqi]
.R:ec[ai] -= SX12a:S1[pq] OT:eaca[apiq]
.R:ec[ai] -= SX12b:S1[pq] OT:eaac[apqi]
drop OT:eaac[apqi], SX12b:S1[pq], OT:eaca[apiq], SX12a:S1[pq]

load T:ec[ai]
.T:ec[ai] -= R:ec[ai]

.Nrm1[] += 2.*T:ec[ai] T:ec[ai]
store T:ec[ai]
.Var1[] += 2.*R:ec[ai] R:ec[ai]
store R:ec[ai]
store Var1[]
store Nrm1[]

load Nrm2[]

load T:eaac[apqi], T:eaca[apiq]
alloc R:eaac[apqi], R:eaca[apiq]
load OT:eaac[apqi], OT:eaca[apiq], X2B:S1[pqrs], X4B:S1[pqrs], X2A:S1[pqrs], X4A:S1[prqs]
.R:eaac[apqi] := OT:eaac[arsi] (2*X2B:S1[pqrs] + X4B:S1[pqrs])
.R:eaac[apqi] += OT:eaca[aris] (2*X4A:S1[pqrs] + X2A:S1[pqrs])
.T:eaac[apqi] += R:eaac[apqi]

.R:eaca[apiq] := OT:eaac[arsi] (X2B:S1[pqrs] + 2*X4B:S1[pqrs])
.R:eaca[apiq] += OT:eaca[aris] (X4A:S1[pqrs] + 2*X2A:S1[pqrs])
.T:eaca[apiq] += R:eaca[apiq]

.Nrm2[] += (2*T:eaac[apqi]-T:eaca[apiq]) T:eaac[apqi]
drop X4A:S1[pqrs], X2A:S1[pqrs], X4B:S1[prqs], X2B:S1[pqrs], OT:eaca[apiq], OT:eaac[apqi]
store R:eaca[apiq], R:eaac[apqi]
store T:eaca[apiq], T:eaac[apqi]

// S2
load T:eacc[apij]
alloc R:eacc[apij]
load OT:eacc[aqij], X2:S2[pq]
.R:eacc[apij] := OT:eacc[aqij] X2:S2[pq]
.T:eacc[apij] += R:eacc[apij]
.Nrm2[] += T:eacc[apij] T:eacc[apij]
drop X2:S2[pq], OT:eacc[aqij]
store R:eacc[apij]
store T:eacc[apij]

// P0
load T:eeaa[abpq]
alloc R:eeaa[abpq]
load OT:eeaa[abrs], X2:P0[pqrs]
.R:eeaa[abpq] := OT:eeaa[abrs] X2:P0[pqrs]
.T:eeaa[abpq] += R:eeaa[abpq]
.Nrm2[] += (2.*T:eeaa[abpq] - T:eeaa[bapq]) T:eeaa[abpq]
drop X2:P0[pqrs], OT:eeaa[abrs]
store R:eeaa[abpq]
store T:eeaa[abpq]

// P1
load T:eeac[abpi]
alloc R:eeac[abpi]
load OT:eeac[abqi], X2:P1[pq]
.R:eeac[abpi] := OT:eeac[abqi] X2:P1[pq]
.T:eeac[abpi] += R:eeac[abpi]
.Nrm2[] += T:eeac[abpi] T:eeac[abpi]
drop X2:P1[pq], OT:eeac[abqi]
store R:eeac[abpi]
store T:eeac[abpi]

// P2
load Var2[]
load R:eecc[abij]
load g:ee[aa], g:cc[ii], ShiftP[]
denom-scale R:eecc[abij], g:ee[aa] + g:ee[bb] - g:cc[ii] - g:cc[jj] + ShiftP[]
drop ShiftP[], g:cc[ii], g:ee[aa]
load T:eecc[abij]
.T:eecc[abij] -= R:eecc[abij]
.Nrm2[] += (2.*T:eecc[abij] - T:eecc[baij]) T:eecc[abij]
store T:eecc[abij]
.Var2[] += (2.*R:eecc[abij] - R:eecc[baij]) R:eecc[abij]
store R:eecc[abij]
store Var2[]

store Nrm2[]

