---- code("Create_Amplitude_Update")
alloc Var1[]

load OR:ac[pi]
load A1[pp], g:cc[ii]
denom-scale OR:ac[pi], A1[pp] - g:cc[ii]
drop g:cc[ii], A1[pp]
alloc OT:ac[pi]
.OT:ac[pi] -= OR:ac[pi]
store OT:ac[pi]
.Var1[] += 2.0*OR:ac[pi] OR:ac[pi]
store OR:ac[pi]

load OR:ea[ap]
load g:ee[aa], A4[pp]
denom-scale OR:ea[ap], g:ee[aa] - A4[pp]
drop A4[pp], g:ee[aa]
alloc OT:ea[ap]
// sign flip as R is formally {V}{P} while T is {PV}
//.OT:ea[ap] -= OR:ea[ap]
.OT:ea[ap] -= OR:ea[ap]
store OT:ea[ap]
.Var1[] += 2.0*OR:ea[ap] OR:ea[ap]
store OR:ea[ap]

store Var1[]

alloc Var2[]
load OR:aacc[pqij]
load A1[pp], g:cc[ii]
denom-scale OR:aacc[pqij], A1[pp] + A1[qq] - g:cc[ii] - g:cc[jj]
drop g:cc[ii], A1[pp]
alloc OT:aacc[pqij]
.OT:aacc[pqij] -= OR:aacc[pqij]
store OT:aacc[pqij]
.Var2[] += (2.0*OR:aacc[pqij] - OR:aacc[qpij]) OR:aacc[pqij]
drop OR:aacc[pqij]

load OR:aaac[pqri]
load g:aa[pp], g:cc[ii]
denom-scale OR:aaac[pqri], g:aa[pp] + g:aa[qq] - g:aa[rr] - g:cc[ii]
drop g:cc[ii], g:aa[pp]
alloc OT:aaac[pqri]
// sign flip as R is formally {V}{VVH} while T is {VVHV}
//.OT:aaac[pqri] -= OR:aaac[pqri]
.OT:aaac[pqri] += OR:aaac[pqri]
store OT:aaac[pqri]
.Var2[] += OR:aaac[pqri] OR:aaac[pqri]
drop OR:aaac[pqri]

load OR:eacc[apij]
load g:ee[aa], A1[pp], g:cc[ii]
denom-scale OR:eacc[apij], g:ee[aa] + A1[pp] - g:cc[ii] - g:cc[jj]
drop g:cc[ii], A1[pp], g:ee[aa]
alloc OT:eacc[apij]
.OT:eacc[apij] -= OR:eacc[apij]
store OT:eacc[apij]
.Var2[] += OR:eacc[apij] OR:eacc[apij]
drop OR:eacc[apij]

load OR:eaac[apqi]
load g:ee[aa], g:cc[ii]
denom-scale OR:eaac[apqi], g:ee[aa] - g:cc[ii]
drop g:cc[ii], g:ee[aa]
alloc OT:eaac[apqi]
// sign flip as R is formally {V}{PVH} while T is {PVHV}
//.OT:eaac[apqi] -= OR:eaac[apqi]
.OT:eaac[apqi] += OR:eaac[apqi]
store OT:eaac[apqi]
.Var2[] += OR:eaac[apqi] OR:eaac[apqi]
drop OR:eaac[apqi]

load OR:eaca[apiq]
load g:ee[aa], g:cc[ii]
denom-scale OR:eaca[apiq], g:ee[aa] - g:cc[ii]
drop g:cc[ii], g:ee[aa]
alloc OT:eaca[apiq]
.OT:eaca[apiq] += OR:eaca[apiq]
store OT:eaca[apiq]
.Var2[] += OR:eaca[apiq] OR:eaca[apiq]
drop OR:eaca[apiq]

load OR:eaaa[apqr]
load g:ee[aa], g:aa[pp]
denom-scale OR:eaaa[apqr], g:ee[aa] + g:aa[pp] - g:aa[qq] - g:aa[rr]
drop g:aa[pp], g:ee[aa]
alloc OT:eaaa[apqr]
.OT:eaaa[apqr] -= OR:eaaa[apqr]
store OT:eaaa[apqr]
.Var2[] += OR:eaaa[apqr] OR:eaaa[apqr]
drop OR:eaaa[apqr]

load OR:eeac[abpi]
load g:ee[aa], g:cc[ii], A4[pp]
denom-scale OR:eeac[abpi], g:ee[aa] + g:ee[bb] - A4[pp] - g:cc[ii]
drop A4[pp], g:cc[ii], g:ee[aa]
alloc OT:eeac[abpi]
// sign flip as R is formally {V}{PPH} while T is {PPHV}
//.OT:eeac[abpi] -= OR:eeac[abpi]
.OT:eeac[abpi] += OR:eeac[abpi]
store OT:eeac[abpi]
.Var2[] += OR:eeac[abpi] OR:eeac[abpi]
store OR:eeac[abpi]

load OR:eeaa[abpq]
load g:ee[aa], g:aa[pp]
denom-scale OR:eeaa[abpq], g:ee[aa] + g:ee[bb] - g:aa[pp] - g:aa[qq]
drop g:aa[pp], g:ee[aa]
alloc OT:eeaa[abpq]
.OT:eeaa[abpq] -= OR:eeaa[abpq]
store OT:eeaa[abpq]
.Var2[] += (2.0*OR:eeaa[abpq] - OR:eeaa[bapq]) OR:eeaa[abpq]
drop OR:eeaa[abpq]


store Var2[]

