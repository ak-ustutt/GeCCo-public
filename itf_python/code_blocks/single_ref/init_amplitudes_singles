// Using MP2 amplitudes for starting guess
alloc T1:ec[ai], EMp1[], Nrm1[]
load f:ec[ai], f:ee[aa], f:cc[ii]
.T1:ec[ai] -= f:ec[ai]
denom-scale T1:ec[ai], f:ee[aa] - f:cc[ii]
.EMp1[] += T1:ec[ai] f:ec[ai]
.Nrm1[] += 2.0*T1:ec[ai] T1:ec[ai]
drop f:cc[ii], f:ee[aa], f:ec[ai]
store Nrm1[], EMp1[], T1:ec[ai]

alloc EMp2[], Nrm2[]
for [i,j]:
   alloc T2:eecc[abij]
   load K:eecc[**ij], f:ee[aa], f:cc[ii], f:cc[jj]
   .T2:eecc[abij] -= K:eecc[abij]
   denom-scale T2:eecc[abij], f:ee[aa] + f:ee[bb] - f:cc[ii] - f:cc[jj]
   .EMp2[] += (2.0*T2:eecc[abij] - T2:eecc[baij]) K:eecc[abij]
   .Nrm2[] += (2.0*T2:eecc[abij] - T2:eecc[baij]) T2:eecc[abij]
   drop f:cc[jj], f:cc[ii], f:ee[aa], K:eecc[**ij]
   store T2:eecc[**ij]
store Nrm2[], EMp2[]

